<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：编程</title>
    <link>https://www.reddit.com/r/programming/new</link>
    <description>计算机编程</description>
    <lastBuildDate>Sun, 19 Oct 2025 01:58:06 GMT</lastBuildDate>
    <item>
      <title>Flowgramming——读起来像句子的程序</title>
      <link>https://www.reddit.com/r/programming/comments/1oadlfh/flowgramming_programs_that_read_like_sentences/</link>
      <description><![CDATA[大多数编程语言首先是为机器构建的，其次是为人类构建的。 Flowgramming 颠覆了这一点。 这是一个开源项目，旨在设计一个模块化、基于流程的编程环境，其中逻辑读起来就像自然语言一样。 您无需编写语法，而是描述应该发生的情况 - FlowOS 通过以下方式构建逻辑： 模块化、可审核的组件，称为 FlowBlocks。 例如，这是有效的 FlowScript： action:intent:“sort_list”输入：“数据块：numbers.raw”输出：“DataBlock：numbers.sorted”标签：[low_memory，auditable]  该行的含义是：   Flowgramming 处理剩下的事情 — 选择最佳的 ActionBlock，执行内存和安全规则，并记录整个过程以进行审核。 完整的系统包括：  FlowDirector — 运行时和调度程序 ActionSystem - 模块化、独立的逻辑单元 CommSystem - 受控通信块 DataSystem - 可信数据处理和版本控制 FlowGuard  - 内置信任和安全实施 FlowLog — 透明的可观察性和审计跟踪  它已获得 MPL 2.0 许可，因此它保持开放性，但可以灵活地供研究或企业使用。 该文档每周都会扩展 — 非常欢迎早期贡献者。 GitHub 存储库：https://github.com/donsauber/FlowOS 如果您感兴趣：  声明式系统设计 基于流程的编程 模块化运行时架构 或真正编写代码 人类可读  …来看看，留下一个星星，或者加入“讨论”选项卡。 Flowgramming 还处于早期阶段 - 但目标很简单： 让编程成为你可以阅读、解释和信任的东西。   由   提交/u/IllustriousAd6785   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1oadlfh/flowgramming_programs_that_read_like_sentences/</guid>
      <pubDate>Sun, 19 Oct 2025 01:51:20 GMT</pubDate>
    </item>
    <item>
      <title>预测 2027 年科技行业会是什么样子</title>
      <link>https://www.reddit.com/r/programming/comments/1oabk38/prediction_of_what_tech_industry_in_2027_could/</link>
      <description><![CDATA[预测 2027 年科技行业会是什么样子。找到了这个 2027 年就业行业的模拟   由   提交/u/Exact_Log_3354   [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1oabk38/prediction_of_what_tech_industry_in_2027_could/</guid>
      <pubDate>Sun, 19 Oct 2025 00:08:49 GMT</pubDate>
    </item>
    <item>
      <title>[周六项目] 回购演练：从第一次提交开始了解大型回购的小型实用工具</title>
      <link>https://www.reddit.com/r/programming/comments/1oa9gtm/saturday_project_repo_walkthrough_small_utility/</link>
      <description><![CDATA[我刚刚制作了一个实用工具，以更好地了解大型项目是如何制作的 例如，Next.js 现在非常庞大且令人畏惧。 但是，如果您进行第一次提交，就不难看出正在做什么以及意图是什么。 该工具可以让您轻松地及时推进 &lt;- 和 -&gt;  您可以按“d”键进入差异模式，它将获取提交之间的差异并将其应用为更改，以便您可以轻松查看 VSCode 或光标中的更改。 在下面的视频示例中，我使用 Next.js 存储库并及时逐步执行它以查看做出了哪些决定。 我使用“更改”按钮在光标中查看以获得良好的差异视图   由   提交 /u/sandalphone   [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1oa9gtm/saturday_project_repo_walkthrough_small_utility/</guid>
      <pubDate>Sat, 18 Oct 2025 22:33:06 GMT</pubDate>
    </item>
    <item>
      <title>嵌入式编程器电源</title>
      <link>https://www.reddit.com/r/programming/comments/1oa9698/power_supply_for_embedded_programmers/</link>
      <description><![CDATA[我一直致力于一个名为 BenchVolt PD 的小型开源项目，这是一款专为家庭实验室和像我这样的创客设计的低成本电源。它的诞生是为了满足工作台上简单、实惠且可靠的需求。 很快它将在 Crowd Supply 上以裸 PCB 形式提供 和一个完整的单元。您可以支持该项目，甚至可以使用开源设计文件构建自己的项目。我很想听听您的想法和反馈。 https://www.crowdsupply.com/fusionxvision/benchvolt-pd   由   提交/u/EEEngineer4Ever  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1oa9698/power_supply_for_embedded_programmers/</guid>
      <pubDate>Sat, 18 Oct 2025 22:19:57 GMT</pubDate>
    </item>
    <item>
      <title>我们来做个游戏吧！ 341：电锯</title>
      <link>https://www.reddit.com/r/programming/comments/1oa69z4/lets_make_a_game_341_chainsaws/</link>
      <description><![CDATA[ 由   提交/u/apeloverage  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1oa69z4/lets_make_a_game_341_chainsaws/</guid>
      <pubDate>Sat, 18 Oct 2025 20:22:37 GMT</pubDate>
    </item>
    <item>
      <title>我为这个业余爱好程序员感到抱歉</title>
      <link>https://www.reddit.com/r/programming/comments/1oa4vw6/i_feel_sorry_for_this_hobby_programmer/</link>
      <description><![CDATA[ 由   提交/u/Strong-Creme-3004  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1oa4vw6/i_feel_sorry_for_this_hobby_programmer/</guid>
      <pubDate>Sat, 18 Oct 2025 19:28:13 GMT</pubDate>
    </item>
    <item>
      <title>《遗忘》将在两周内中断</title>
      <link>https://www.reddit.com/r/programming/comments/1oa4mhj/oblivion_breaks_in_a_fortnight/</link>
      <description><![CDATA[ 由   提交/u/BlueGoliath  [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1oa4mhj/oblivion_breaks_in_a_fortnight/</guid>
      <pubDate>Sat, 18 Oct 2025 19:18:04 GMT</pubDate>
    </item>
    <item>
      <title>帮忙写一个python代码</title>
      <link>https://www.reddit.com/r/programming/comments/1o9yvqp/help_with_a_python_code/</link>
      <description><![CDATA[我需要帮助理解我在使用终止密码的代码中做错了什么 在文件 encrypt.py 中编写一个脚本，输入一行明文和一个距离值，并使用终止密码输出加密文本。该脚本应该适用于可打印字符。 (LO: 4.1, 4.2 这是当前代码 plainText = input(&quot;请输入要加密的消息：&quot;) distance = int(input(&quot;请输入距离值：&quot;)) code = &quot;&quot; for ch in plainText: ordValue = ord(ch) cipherValue = ordValue + distance if cipherValue &gt; ord(&#39;z&#39;): cipherValue = ord(&#39;a&#39;) + distance - \ (ord(&#39;z&#39;) - ordValue + 1) code += chr(cipherValue) print(code) 输入 ÆÇÈÉÊË 时的输出是 īĬĭĮįй，而它应该是 `abcde 我在诉诸原始代码之前更改了 ord 值，但似乎无法得到正确，老师 指出唯一需要更改的逻辑是 If 语句。据我所知，唯一可打印的字符通常是 ASCII 表的位置 32 到 127，但输入的纯文本字符来自扩展表，并且不知道如何实现它。 使用 python 3.13.7    由   提交&lt;一 href=&quot;https://www.reddit.com/user/FishermanOk8672&quot;&gt;/u/FishermanOk8672   [链接]   &lt;跨度&gt;[评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1o9yvqp/help_with_a_python_code/</guid>
      <pubDate>Sat, 18 Oct 2025 15:32:23 GMT</pubDate>
    </item>
    <item>
      <title>两次设计并相信你所做的事情</title>
      <link>https://www.reddit.com/r/programming/comments/1o9yo18/design_twice_and_trust_in_what_you_do/</link>
      <description><![CDATA[ 由   提交 /u/Exact_Prior6299   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1o9yo18/design_twice_and_trust_in_what_you_do/</guid>
      <pubDate>Sat, 18 Oct 2025 15:23:44 GMT</pubDate>
    </item>
    <item>
      <title>您应该避免的 SQL 反模式</title>
      <link>https://www.reddit.com/r/programming/comments/1o9ylkg/sql_antipatterns_you_should_avoid/</link>
      <description><![CDATA[ 由   提交/u/BrewedDoritos  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1o9ylkg/sql_antipatterns_you_should_avoid/</guid>
      <pubDate>Sat, 18 Oct 2025 15:20:59 GMT</pubDate>
    </item>
    <item>
      <title>规范驱动的人工智能工具包</title>
      <link>https://www.reddit.com/r/programming/comments/1o9yivq/specdriven_ai_toolkit/</link>
      <description><![CDATA[GitHub 提供的一种新方法，利用 AI 和代理工具通过 Spec Kit（开源）更智能地完成您的工作，将需求转化为可操作的蓝图，简化开发并提高团队的代码质量。   由   提交 /u/abdelrhman-arnos   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1o9yivq/specdriven_ai_toolkit/</guid>
      <pubDate>Sat, 18 Oct 2025 15:18:08 GMT</pubDate>
    </item>
    <item>
      <title>我们构建了 Sidian，这是一个隐私第一的人工智能代码编辑器，它使用上下文引擎来理解您的整个代码库。</title>
      <link>https://www.reddit.com/r/programming/comments/1o9wz55/we_have_built_sidian_a_privacy_first_ai_code/</link>
      <description><![CDATA[大家好， 经过大量工作，我和我的团队很高兴能分享 Sidian 的公开测试版，这是我们为解决让我们抓狂的问题而构建的 AI 代码编辑器。 像你们中的许多人一样，我们发现大多数 AI 编码工具非常适合小型、孤立的任务，但在理解大型、复杂的上下文时就会崩溃。 项目。他们不知道另一个目录中的内部库或您的团队使用的特定模式。 我们的解决方案是一个专有的上下文引擎，它可以索引您的整个存储库。这使得人工智能能够获得全面的了解，从而提供更加智能和准确的帮助。 这就是 Sidian 的不同之处：  完整的存储库上下文：它不仅仅读取您当前的文件；它还会读取您当前的文件。它了解整个项目。这是重构、调试和生成功能代码的游戏规则改变者。 隐私第一： Sidian 专为在本地计算机上工作而构建。它永远不会存储您的代码或将您的代码发送到外部服务器。您计算机上的内容将保留在您的计算机上。 多提供商和多提供商本地模型：我们支持所有主要的人工智能提供商（OpenAI、Anthropic、Google 等），但更重要的是，我们与 Ollama 和 LM Studio 具有一流的集成。您可以在自己的硬件上运行推理，以实现完全的隐私和控制。 不仅仅是一个助手：它具有强大的代理，用于规划、调试和数据分析，所有这些都由相同的上下文引擎提供支持。  我们处于公开测试版，可以免费下载，我们真诚地渴望来自社区的反馈。让我们知道您的想法、您讨厌的内容以及我们下一步应该构建什么。 感谢您查看！   由   提交/u/BHAWESHBHASKAR   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1o9wz55/we_have_built_sidian_a_privacy_first_ai_code/</guid>
      <pubDate>Sat, 18 Oct 2025 14:15:50 GMT</pubDate>
    </item>
    <item>
      <title>比尔·盖茨的第一个商业代码 (Altair BASIC) 的幕后样子</title>
      <link>https://www.reddit.com/r/programming/comments/1o9wk8x/what_bill_gates_first_commercial_code_altair/</link>
      <description><![CDATA[ 由   提交/u/Outsource_Problems   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1o9wk8x/what_bill_gates_first_commercial_code_altair/</guid>
      <pubDate>Sat, 18 Oct 2025 13:59:16 GMT</pubDate>
    </item>
    <item>
      <title>作为软件开发人员应遵循的编码最佳实践</title>
      <link>https://www.reddit.com/r/programming/comments/1o9voh7/coding_best_practices_you_should_follow_as_a/</link>
      <description><![CDATA[大家好！ 👋 我一直在学习更多有关干净代码实践的知识，并且最近深入研究了单一职责原则 (SRP)。这是一开始听起来很简单，但可以完全改变您构造类和函数的方式的事情之一。 我写了一篇 Medium 文章，通过示例和一些关于如何避免“意大利面条代码”感觉的实用技巧对其进行了详细分析：  https://medium.com/@harshalgadhe/the-single-responsibility-principle-srp-explained-why-your-code-still-stinks-and-how-to-fix-it-3193c88722ab 我很想听听您的想法，如果您有任何关于 SRP 如何帮助您完成项目的提示或示例，我洗耳恭听！ 祝您编码愉快！ 🚀   由   提交/u/Feeling_Lettuce7476   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1o9voh7/coding_best_practices_you_should_follow_as_a/</guid>
      <pubDate>Sat, 18 Oct 2025 13:22:09 GMT</pubDate>
    </item>
    <item>
      <title>转储器 v1.4.0</title>
      <link>https://www.reddit.com/r/programming/comments/1o9uuwu/dumper_v140/</link>
      <description><![CDATA[ 由   提交/u/elkirrs   [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1o9uuwu/dumper_v140/</guid>
      <pubDate>Sat, 18 Oct 2025 12:46:30 GMT</pubDate>
    </item>
    </channel>
</rss>