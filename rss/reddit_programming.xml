<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：编程</title>
    <link>https://www.reddit.com/r/programming/new</link>
    <description>计算机编程</description>
    <lastBuildDate>Mon, 27 Oct 2025 18:34:41 GMT</lastBuildDate>
    <item>
      <title>如何在事件驱动架构中设计和测试读取模型</title>
      <link>https://www.reddit.com/r/programming/comments/1ohlczl/how_to_design_and_test_read_models_in_eventdriven/</link>
      <description><![CDATA[ 由   提交 /u/Adventurous-Salt8514   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ohlczl/how_to_design_and_test_read_models_in_eventdriven/</guid>
      <pubDate>Mon, 27 Oct 2025 17:51:43 GMT</pubDate>
    </item>
    <item>
      <title>我的第一家初创公司的糟糕技术架构</title>
      <link>https://www.reddit.com/r/programming/comments/1ohkm2m/the_terrible_technical_architecture_of_my_first/</link>
      <description><![CDATA[ 由   提交/u/jacobs-tech-tavern   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ohkm2m/the_terrible_technical_architecture_of_my_first/</guid>
      <pubDate>Mon, 27 Oct 2025 17:24:08 GMT</pubDate>
    </item>
    <item>
      <title>Spring Boot 中异步 Webhooks 的线程池调优：真实经验教训和实用指南</title>
      <link>https://www.reddit.com/r/programming/comments/1ohjuen/thread_pool_tuning_for_async_webhooks_in_spring/</link>
      <description><![CDATA[我最近写了一篇关于在 Spring Boot 中优化 webhook 和异步调用线程池的详细指南。它的目的是帮助初级 Java 开发人员通过实际的线程池调整来更多地利用我们的后端服务。 我希望获得您的想法、实际经验和反馈！ 链接： https://medium.com/gitconnected/how-to-tune-thread-pools-for-webhooks-and-async-calls-in-spring-boot-e9b76095347e?sk=f4304bb38bd2f44820647f7af6dc822b   由   提交/u/sshetty03  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ohjuen/thread_pool_tuning_for_async_webhooks_in_spring/</guid>
      <pubDate>Mon, 27 Oct 2025 16:56:05 GMT</pubDate>
    </item>
    <item>
      <title>[项目] PyTorch 中的自适应稀疏训练 — 训练速度提高 2-3 倍，能量减少约 61%（在 ImageNet-100 上具有相同的精度）</title>
      <link>https://www.reddit.com/r/programming/comments/1ohj74h/project_adaptive_sparse_training_in_pytorch_23/</link>
      <description><![CDATA[如果您希望在不更改模型的情况下使训练循环更便宜、更快，这可能很有用。 我开源了自适应稀疏训练 (AST) 的 PyTorch 实现，它只选择每个时期信息最丰富的样本，因此您可以跳过“简单”示例上的反向传播。在带有预训练 ResNet-50 的 ImageNet-100 上，它与基线精度相匹配，同时减少了约 61% 的能量。更激进的模式可实现 2.78 倍加速，但精度下降约 1-2 个百分点。 为什么程序员可能会关心  插入：保留模型/优化器/时间表；在损失周围添加几行以仅激活前 K% 样本。 更低的费用/更快的 CI：挂钟训练时间加速约 1.9–2.8 倍。 便携式：适用于免费的 Kaggle P100；没有外来操作或自定义 CUDA。 确定性和确定性。可测试：单前向传递，矢量化掩蔽；微小的开销。  它是如何工作的（核心思想） 每个批次使用损失幅度和预测不确定性（熵）计算每个样本的显着性分数。只有前 K% 的“活跃”样本才会贡献梯度。简单的 PI 控制器使激活率保持在目标附近。 # logits: [B, C], Targets: [B] loss_vec = F.cross_entropy(logits, Targets,duction=“none”) # 每个样本损失 probs = logits.softmax(dim=1) entropy = -(probs * probs.clamp_min(1e-12).log()).sum(dim=1) # 每个样本熵显着性 = 0.7 * loss_vec + 0.3 * 熵 # 可加权 thr =controller.update(significance, target_activation=0.35) # 例如35% active = (significance &gt;= thr) # 仅活跃样本贡献；单次前向传递，无需重新计算损失 = (loss_vec * active.float()).sum() / active.float().sum().clamp_min(1.0) loss.backward()   无第二次前向：仅屏蔽每个样本的损失。 PI 控制器调整 thr 保持约 10–40% 的活跃度（可配置）。  结果（在 IN-1K 上预训练的 ImageNet-100、ResNet-50） 生产（最佳准确度）  Top-1： 92.12%（基线 92.18%）→ Δ +0.06 pp 能量： –61.49% 速度： 1.92× 激活： 38.51% 样本/周期  效率（最大 速度）  Top-1： 91.92% 能量： –63.36% 速度： 2.78× 激活： 36.64%  设置：10 纪元预热 u/100% 样本 → 90 纪元 AST u/10–40%；基线和 AST 均开启 AMP；相同的 aug/optimizer/schedule 进行奇偶校验。 尝试一下 git clone https://github.com/oluwafemidiakhoa/adaptive-sparse-training cd adjustment-sparse-training # (可选) conda create -n ast python=3.10 &amp;&amp; conda activate ast pip install -rrequirements.txt # 生产（注重精度） python KAGGLE_IMAGENET100_AST_PRODUCTION.py --data /path/to/imagenet100 # 效率（最大速度） python KAGGLE_IMAGENET100_AST_TWO_STAGE_Prod.py --data /path/to/imagenet100   仓库： https://github.com/oluwafemidiakhoa/adaptive-sparse-training 使用哪个脚本： FILE_GUIDE.md 更多详细信息： README.md  寻求反馈  大规模实现每样本损失+掩蔽的最简洁方式 代码库？ 熵的替代方案（例如，边际、温度缩放置信度、MC-dropout 方差）？ 与梯度累积/DDP / ZeRO 集成时遇到的问题？ 您下一步想看到的基准（ImageNet-1K、LLM 微调等）？  很高兴回答问题或 审核 PR。   由   提交 /u/Klutzy-Aardvark4361   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ohj74h/project_adaptive_sparse_training_in_pytorch_23/</guid>
      <pubDate>Mon, 27 Oct 2025 16:32:04 GMT</pubDate>
    </item>
    <item>
      <title>美好的住宿体验——这是科技工作者的新现实</title>
      <link>https://www.reddit.com/r/programming/comments/1ohifyi/the_great_stay_heres_the_new_reality_for_tech/</link>
      <description><![CDATA[ 由   提交/u/KitchenTaste7229  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ohifyi/the_great_stay_heres_the_new_reality_for_tech/</guid>
      <pubDate>Mon, 27 Oct 2025 16:04:18 GMT</pubDate>
    </item>
    <item>
      <title>Postgres 临时连接</title>
      <link>https://www.reddit.com/r/programming/comments/1ohhujc/postgres_temporal_joins/</link>
      <description><![CDATA[ 由   提交/u/winsletts  [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ohhujc/postgres_temporal_joins/</guid>
      <pubDate>Mon, 27 Oct 2025 15:42:04 GMT</pubDate>
    </item>
    <item>
      <title>不可能的优化以及实现它的元编程</title>
      <link>https://www.reddit.com/r/programming/comments/1ohh2xu/the_impossible_optimization_and_the/</link>
      <description><![CDATA[ 由   提交 /u/verdagon   [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ohh2xu/the_impossible_optimization_and_the/</guid>
      <pubDate>Mon, 27 Oct 2025 15:13:31 GMT</pubDate>
    </item>
    <item>
      <title>Python 软件基金会撤回了美国政府资助计划的 150 万美元提案</title>
      <link>https://www.reddit.com/r/programming/comments/1ohgzl9/the_python_software_foundation_has_withdrawn_15/</link>
      <description><![CDATA[ 由   提交/u/N911999  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ohgzl9/the_python_software_foundation_has_withdrawn_15/</guid>
      <pubDate>Mon, 27 Oct 2025 15:10:03 GMT</pubDate>
    </item>
    <item>
      <title>综合数据库概念学习指南 - 面向软件开发人员的 Git Repo</title>
      <link>https://www.reddit.com/r/programming/comments/1ohghlt/comprehensive_database_concepts_learning_guide/</link>
      <description><![CDATA[嘿 r/programming 社区！ 👋 作为一名软件工程师，我整理了一个详细的 Git 存储库，作为数据库概念的实践学习指南。无论您是关系数据库的初学者还是处理分布式系统的高级开发人员，这个存储库都适合每个人。 存储库中有什么？本指南涵盖 10 个核心数据库主题，并提供深入的课程、可视化图表和实用代码示例，帮助您理解理论和应用。这是一个快速细分：数据库概念和数据库模型：关系型与 NoSQL、规范化、CAP 定理、多语言持久性。数据存储与访问：行存储与列存储、存储引擎（InnoDB、LSM 树）、预写日志记录。索引和查询优化：B-Tree、Hash、GiST 索引、查询执行计划、优化策略。交易与一致性：ACID 属性、隔离级别、MVCC、分布式事务。复制与复制高可用性：主从、同步与异步复制、故障转移策略。分片&amp;分区：水平分区与垂直分区、一致性哈希、重新分片。缓存和性能：缓存旁路、直写、多级缓存、缓存一致性。备份与备份恢复：完整/增量备份、时间点恢复、WAL。安全与合规性：RBAC、加密、行级安全性、GDPR 合规性。运营与工具：架构迁移、监控、零停机部署。   由   提交 /u/Claymonstre   [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ohghlt/comprehensive_database_concepts_learning_guide/</guid>
      <pubDate>Mon, 27 Oct 2025 14:51:33 GMT</pubDate>
    </item>
    <item>
      <title>人工智能可以编码，但不能构建软件</title>
      <link>https://www.reddit.com/r/programming/comments/1ohf259/ai_can_code_but_it_cant_build_software/</link>
      <description><![CDATA[ 由   提交 /u/Acrobatic-Fly-7324   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ohf259/ai_can_code_but_it_cant_build_software/</guid>
      <pubDate>Mon, 27 Oct 2025 13:55:15 GMT</pubDate>
    </item>
    <item>
      <title>构建更好的软件：为什么工作流程每次都能胜过代码 • Ben Smith 和 James Beswick</title>
      <link>https://www.reddit.com/r/programming/comments/1ohdzo0/building_better_software_why_workflows_beat_code/</link>
      <description><![CDATA[ 由   提交 /u/goto-con   [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ohdzo0/building_better_software_why_workflows_beat_code/</guid>
      <pubDate>Mon, 27 Oct 2025 13:10:26 GMT</pubDate>
    </item>
    <item>
      <title>构建智能对话流程：后端查询+动态用户数据收集</title>
      <link>https://www.reddit.com/r/programming/comments/1ohdpxl/building_a_smart_conversational_flow_backend/</link>
      <description><![CDATA[嗨，我正在为我的工作开发一些人工智能实现。到目前为止，这些实现都是 API 调用，用于处理客户端通过 WhatsApp 发送的消息。然而，现在我被要求做一些更“智能”的事情：实现一个信息流，其中用户从我的后端请求有关实体的信息，人工智能做出响应，同时它要求数据来预先注册该用户。 我想过用包含所有规则的大提示来做这件事，但我担心它可能太大。有什么想法吗？   由   提交/u/Difficult_Account739   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ohdpxl/building_a_smart_conversational_flow_backend/</guid>
      <pubDate>Mon, 27 Oct 2025 12:58:58 GMT</pubDate>
    </item>
    <item>
      <title>我们来做个游戏吧！ 346：技能和武器</title>
      <link>https://www.reddit.com/r/programming/comments/1ohdeli/lets_make_a_game_346_skills_and_weapons/</link>
      <description><![CDATA[ 由   提交/u/apeloverage  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ohdeli/lets_make_a_game_346_skills_and_weapons/</guid>
      <pubDate>Mon, 27 Oct 2025 12:44:59 GMT</pubDate>
    </item>
    <item>
      <title>身份验证（会话与 JWT）</title>
      <link>https://www.reddit.com/r/programming/comments/1ohd4b9/authentication_session_vs_jwt/</link>
      <description><![CDATA[ 由   提交/u/stmoreau  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ohd4b9/authentication_session_vs_jwt/</guid>
      <pubDate>Mon, 27 Oct 2025 12:31:49 GMT</pubDate>
    </item>
    <item>
      <title>Python 3.14 与 3.13 / 3.12 / 3.11 / 3.10 – 性能测试。总共对搭载 AMD Ryzen 7000 系列和第 13 代英特尔酷睿处理器的台式机、笔记本电脑或迷你电脑的计算机进行了 100 项各种基准测试。</title>
      <link>https://www.reddit.com/r/programming/comments/1ohaqg8/python_314_vs_313_312_311_310_performance_testing/</link>
      <description><![CDATA[ 由   提交/u/BestRef  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ohaqg8/python_314_vs_313_312_311_310_performance_testing/</guid>
      <pubDate>Mon, 27 Oct 2025 10:24:04 GMT</pubDate>
    </item>
    </channel>
</rss>