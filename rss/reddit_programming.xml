<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：编程</title>
    <link>https://www.reddit.com/r/programming/new</link>
    <description>计算机编程</description>
    <lastBuildDate>Sat, 18 Oct 2025 18:31:28 GMT</lastBuildDate>
    <item>
      <title>为什么基于 0 的索引</title>
      <link>https://www.reddit.com/r/programming/comments/1oa0wqv/why_0based_indexing/</link>
      <description><![CDATA[Dijkstra, 1982:  为了表示自然数 2, 3, ..., 12 的子序列，没有有害的三个点，我们可以使用四种约定 a) 2 ≤ i  13 b) 1  i ≤ 12 c) 2 ≤ i ≤ 12 d) 1 d)我&lt; 13 存在一个最小的自然数。排除下界（如 b）和 d）中那样，迫使从最小自然数开始的子序列将下界纳入非自然数领域。这很难看，所以对于下界，我们更喜欢 a) 和 c) 中的 ≤。现在考虑从最小自然数开始的子序列：当序列收缩为空时，包含上限将迫使后者变得不自然。这很难看，所以对于上限，我们更喜欢 &lt;如 a) 和 d) 中所示。我们得出结论，约定 a) 是首选。 当处理长度为 N 的序列时，我们希望通过下标来区分其元素，下一个令人烦恼的问题是分配给其起始元素的下标值是什么。遵守约定 a)，当从下标 1 开始时，下标范围 1 ≤ i &lt; N+1；然而，从 0 开始，给出更好的范围 0 ≤ i &lt; N. 因此，让我们的序数从零开始：元素的序数（下标）等于序列中它前面的元素数。这个故事的寓意是，在经历了几个世纪之后，我们最好将零视为最自然的数字。  首先，他捍卫现在标准的[start, end)惯例，说它在美学上是干净的：包括开始，排除结束。您可以轻松地将范围的长度计算为 end - start，相邻范围不会重叠，并且整个过程与基于 0 的索引配合得很好。当然，这对于机器来说是有效的。 但这就是我必须反驳的地方。我并不是说开头就是问题所在——我完全同意这一点。但是抛弃完全包含的选项 (c)，[start, end]，例如 2 ≤ i ≤ 12 — 仅仅因为 12 - 2 = 10 与 11 个元素的实际计数不匹配？这不是放逐它的理由。这只是一个很小的算术细节。 事实上，Dijkstra 提出了一个公平的观点，即 [start, end) 使相邻序列对齐（例如 [0:5] 和 [5:10]），但只有当您的首要任务是范围操作时，这才重要。从人类的角度来看，尤其是在编程之外，包含范围更有意义。我们自然会说“从 2 到 12”，意思是包括两端。不是“从 2 到但不包括 12”。 这让我想到了主要问题： 是的，如果您正在考虑指针数学，则 arr[0] == arr + 0 非常有意义。但高级语言应该将这些东西抽象出来。为什么每个新开发人员都必须忘记 20 年从 1 开始数数的知识来处理数组？这不是组装。我们真的需要像 C 那样以零开始每个列表吗？ 我知道基于 0 的索引不会消失，而且有实际的优势。但我认为这并不普遍直观。事实并非如此。   由   提交/u/WildCard7474   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1oa0wqv/why_0based_indexing/</guid>
      <pubDate>Sat, 18 Oct 2025 16:54:18 GMT</pubDate>
    </item>
    <item>
      <title>帮忙写一个python代码</title>
      <link>https://www.reddit.com/r/programming/comments/1o9yvqp/help_with_a_python_code/</link>
      <description><![CDATA[我需要帮助理解我在使用终止密码的代码中做错了什么 在文件 encrypt.py 中编写一个脚本，输入一行明文和一个距离值，并使用终止密码输出加密文本。该脚本应该适用于可打印字符。 (LO: 4.1, 4.2 这是当前代码 plainText = input(&quot;请输入要加密的消息：&quot;) distance = int(input(&quot;请输入距离值：&quot;)) code = &quot;&quot; for ch in plainText: ordValue = ord(ch) cipherValue = ordValue + distance if cipherValue &gt; ord(&#39;z&#39;): cipherValue = ord(&#39;a&#39;) + distance - \ (ord(&#39;z&#39;) - ordValue + 1) code += chr(cipherValue) print(code) 输入 ÆÇÈÉÊË 时的输出是 īĬĭĮįй，而它应该是 `abcde 我在诉诸原始代码之前更改了 ord 值，但似乎无法得到正确，老师 指出唯一需要更改的逻辑是 If 语句。据我所知，唯一可打印的字符通常是 ASCII 表的位置 32 到 127，但输入的纯文本字符来自扩展表，并且不知道如何实现它。 使用 python 3.13.7    由   提交&lt;一 href=&quot;https://www.reddit.com/user/FishermanOk8672&quot;&gt;/u/FishermanOk8672   [链接]   &lt;跨度&gt;[评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1o9yvqp/help_with_a_python_code/</guid>
      <pubDate>Sat, 18 Oct 2025 15:32:23 GMT</pubDate>
    </item>
    <item>
      <title>两次设计并相信你所做的事情</title>
      <link>https://www.reddit.com/r/programming/comments/1o9yo18/design_twice_and_trust_in_what_you_do/</link>
      <description><![CDATA[ 由   提交 /u/Exact_Prior6299   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1o9yo18/design_twice_and_trust_in_what_you_do/</guid>
      <pubDate>Sat, 18 Oct 2025 15:23:44 GMT</pubDate>
    </item>
    <item>
      <title>您应该避免的 SQL 反模式</title>
      <link>https://www.reddit.com/r/programming/comments/1o9ylkg/sql_antipatterns_you_should_avoid/</link>
      <description><![CDATA[ 由   提交/u/BrewedDoritos  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1o9ylkg/sql_antipatterns_you_should_avoid/</guid>
      <pubDate>Sat, 18 Oct 2025 15:20:59 GMT</pubDate>
    </item>
    <item>
      <title>规范驱动的人工智能工具包</title>
      <link>https://www.reddit.com/r/programming/comments/1o9yivq/specdriven_ai_toolkit/</link>
      <description><![CDATA[GitHub 提供的一种新方法，可利用 AI 和代理工具通过 Spec Kit（开源）更智能地完成您的工作，将需求转化为可操作的蓝图，简化开发并提高团队的代码质量。   由   提交 /u/abdelrhman-arnos   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1o9yivq/specdriven_ai_toolkit/</guid>
      <pubDate>Sat, 18 Oct 2025 15:18:08 GMT</pubDate>
    </item>
    <item>
      <title>我们构建了 Sidian，这是一个隐私第一的人工智能代码编辑器，它使用上下文引擎来理解您的整个代码库。</title>
      <link>https://www.reddit.com/r/programming/comments/1o9wz55/we_have_built_sidian_a_privacy_first_ai_code/</link>
      <description><![CDATA[大家好， 经过大量工作，我和我的团队很高兴分享 Sidian 的公开测试版，这是我们为解决让我们抓狂的问题而构建的 AI 代码编辑器。 像你们中的许多人一样，我们发现大多数 AI 编码工具非常适合小型、孤立的任务，但在理解大型、复杂的上下文时就会崩溃。 项目。他们不知道另一个目录中的内部库或您的团队使用的特定模式。 我们的解决方案是一个专有的上下文引擎，它可以索引您的整个存储库。这使得人工智能能够获得全面的了解，从而提供更加智能和准确的帮助。 这就是 Sidian 的不同之处：  完整的存储库上下文：它不仅仅读取您当前的文件；它还会读取您当前的文件。它了解整个项目。这是重构、调试和生成功能代码的游戏规则改变者。 隐私第一： Sidian 专为在本地计算机上工作而构建。它永远不会存储您的代码或将您的代码发送到外部服务器。您计算机上的内容将保留在您的计算机上。 多提供商和多提供商本地模型：我们支持所有主要的人工智能提供商（OpenAI、Anthropic、Google 等），但更重要的是，我们与 Ollama 和 LM Studio 具有一流的集成。您可以在自己的硬件上运行推理，以实现完全的隐私和控制。 不仅仅是一个助手：它具有强大的代理，用于规划、调试和数据分析，所有这些都由相同的上下文引擎提供支持。  我们处于公开测试版，可以免费下载，我们真诚地渴望来自社区的反馈。让我们知道您的想法、您讨厌的内容以及我们下一步应该构建什么。 感谢您查看！   由   提交/u/BHAWESHBHASKAR   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1o9wz55/we_have_built_sidian_a_privacy_first_ai_code/</guid>
      <pubDate>Sat, 18 Oct 2025 14:15:50 GMT</pubDate>
    </item>
    <item>
      <title>比尔·盖茨的第一个商业代码 (Altair BASIC) 的幕后样子</title>
      <link>https://www.reddit.com/r/programming/comments/1o9wk8x/what_bill_gates_first_commercial_code_altair/</link>
      <description><![CDATA[ 由   提交/u/Outsource_Problems   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1o9wk8x/what_bill_gates_first_commercial_code_altair/</guid>
      <pubDate>Sat, 18 Oct 2025 13:59:16 GMT</pubDate>
    </item>
    <item>
      <title>我是不是被骗了？</title>
      <link>https://www.reddit.com/r/programming/comments/1o9vtau/am_i_being_ripped_off/</link>
      <description><![CDATA[我不确定这是否是正确的地方（如果不能随意引导我到更合适的 Reddit 子版块），但是有一个网站以似乎随机的间隔发布公寓广告，我希望有一种方法可以制作某种程序来在他们发布内容时通知我。  我联系 Fiverr 上的某人询问是否可行，他们给了我 4-5 天的配额和 400-500 美元，因为他说他必须为此制作一个完整的平台。但最重要的是，他表示该网站可以随时阻止这种“非官方监控”，并且可以终生有效，但也可能只有效一周。  现在我对编程一无所知，也不知道制作我所要求的东西是多么容易/困难，所以也许这是合理的，但对我来说这听起来很疯狂。所以我说我会考虑一下，只是想和你们中一些更熟悉这个过程的人确认一下，如果这一切都通过了，或者我是否被敲诈了！   由   提交 /u/DisastrousHurry5201   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1o9vtau/am_i_being_ripped_off/</guid>
      <pubDate>Sat, 18 Oct 2025 13:27:57 GMT</pubDate>
    </item>
    <item>
      <title>作为软件开发人员应遵循的编码最佳实践</title>
      <link>https://www.reddit.com/r/programming/comments/1o9voh7/coding_best_practices_you_should_follow_as_a/</link>
      <description><![CDATA[大家好！ 👋 我一直在学习更多有关干净代码实践的知识，并且最近深入研究了单一职责原则 (SRP)。这是一开始听起来很简单，但可以完全改变您构造类和函数的方式的事情之一。 我写了一篇 Medium 文章，通过示例和一些关于如何避免“意大利面条代码”感觉的实用技巧对其进行了详细分析：  https://medium.com/@harshalgadhe/the-single-responsibility-principle-srp-explained-why-your-code-still-stinks-and-how-to-fix-it-3193c88722ab 我很想听听您的想法，如果您有任何关于 SRP 如何帮助您完成项目的提示或示例，我洗耳恭听！ 祝您编码愉快！ 🚀   由   提交/u/Feeling_Lettuce7476   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1o9voh7/coding_best_practices_you_should_follow_as_a/</guid>
      <pubDate>Sat, 18 Oct 2025 13:22:09 GMT</pubDate>
    </item>
    <item>
      <title>转储器 v1.4.0</title>
      <link>https://www.reddit.com/r/programming/comments/1o9uuwu/dumper_v140/</link>
      <description><![CDATA[ 由   提交/u/elkirrs   [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1o9uuwu/dumper_v140/</guid>
      <pubDate>Sat, 18 Oct 2025 12:46:30 GMT</pubDate>
    </item>
    <item>
      <title>Stack Overflow 与 ChatGPT：谁在操纵你？</title>
      <link>https://www.reddit.com/r/programming/comments/1o9tq1m/stack_overflow_vs_chatgpt_whos_gaslighting_you/</link>
      <description><![CDATA[我写了一篇文章，探讨开发人员工具如何塑造我们的情感体验。 Stack Overflow 常常让我们感觉自己很愚蠢。 ChatGPT 的即时清晰度让我们很满意。但这种才华是真实的吗？ 希望得到其他开发人员的反馈： https://medium.com/@nurrehman/stack-overflow-makes-you-feel-stupid-chatgpt-makes-you-feel-brilliant-one-of-them-is-lying-c3a49849d724   由   提交 /u/Stromedy1   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1o9tq1m/stack_overflow_vs_chatgpt_whos_gaslighting_you/</guid>
      <pubDate>Sat, 18 Oct 2025 11:51:41 GMT</pubDate>
    </item>
    <item>
      <title>刚刚构建了我自己的多式联运 RAG</title>
      <link>https://www.reddit.com/r/programming/comments/1o9s3bm/just_built_my_own_multimodal_rag/</link>
      <description><![CDATA[上传 PDF、图像、音频文件 用自然语言提出问题 获得准确答案 - 全部在您的计算机上本地运行  无云。没有 API 密钥。没有数据泄露。纯粹的人工智能魔法正在您的笔记本电脑上发生！ 看看   由   提交 /u/tanitheflexer   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1o9s3bm/just_built_my_own_multimodal_rag/</guid>
      <pubDate>Sat, 18 Oct 2025 10:16:30 GMT</pubDate>
    </item>
    <item>
      <title>赛博朋克控制台</title>
      <link>https://www.reddit.com/r/programming/comments/1o9ri1n/cyberpunk_console/</link>
      <description><![CDATA[你好。我创建了一个赛博朋克风格的终端模拟，我想您可能会感兴趣。该项目的原因是为了好玩并提高我的技能。我希望你喜欢它！ https://sabbat.cloud 如果你想了解内幕，你可以在https://github.com/Sabbat-cloud/sabbat-cyberpunk-console   由   提交/u/Nica_Bcn   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1o9ri1n/cyberpunk_console/</guid>
      <pubDate>Sat, 18 Oct 2025 09:39:18 GMT</pubDate>
    </item>
    <item>
      <title>Rust 依赖生态系统的状态</title>
      <link>https://www.reddit.com/r/programming/comments/1o9rgso/the_state_of_the_rust_dependency_ecosystem/</link>
      <description><![CDATA[ 由   提交/u/fittyscan  [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1o9rgso/the_state_of_the_rust_dependency_ecosystem/</guid>
      <pubDate>Sat, 18 Oct 2025 09:37:06 GMT</pubDate>
    </item>
    <item>
      <title>Blinter The Linter - 跨平台批处理脚本 Linter</title>
      <link>https://www.reddit.com/r/programming/comments/1o9qp1x/blinter_the_linter_a_cross_platform_batch_script/</link>
      <description><![CDATA[是的，现在是 2025 年了。是的，人们仍在编写批处理脚本。不，它们不应该崩溃。 它的作用 ✅ 158 条规则，涵盖错误/警告/样式/安全/性能 ✅ 捕获令人讨厌的东西：命令注入、路径遍历、不安全的临时文件 ✅ 处理奇怪的东西：变量扩展、FOR 循环、 多级转义 ✅ 10MB+文件？没问题。 Unicode？明白了。 线程安全？始终。 立即获取 bash pip install Blinter  或者从 GitHub 版本 获取独立的 .exe 一个命令 bash python -m blinter script.bat  就是这样。无需配置。没有仪式。只需将其指向您的 .bat 或 .cmd 文件即可。  第一个用于 Windows 批处理文件的专业级 linter。 因为您的自动化脚本不应该用胶带粘在一起。 📦 PyPI • ⚙️ GitHub   由   提交/u/Ok_Bottle8789   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1o9qp1x/blinter_the_linter_a_cross_platform_batch_script/</guid>
      <pubDate>Sat, 18 Oct 2025 08:47:08 GMT</pubDate>
    </item>
    </channel>
</rss>