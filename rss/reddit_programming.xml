<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：编程</title>
    <link>https://www.reddit.com/r/programming/new</link>
    <description>计算机编程</description>
    <lastBuildDate>Tue, 21 Oct 2025 18:35:13 GMT</lastBuildDate>
    <item>
      <title>Alexander Stathis：在 AngelList 上扩展模块化 Rails 整体 - On Rails</title>
      <link>https://www.reddit.com/r/programming/comments/1ockyqe/alexander_stathis_scaling_a_modular_rails/</link>
      <description><![CDATA[ 由   提交 /u/robbyrussell   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ockyqe/alexander_stathis_scaling_a_modular_rails/</guid>
      <pubDate>Tue, 21 Oct 2025 18:33:27 GMT</pubDate>
    </item>
    <item>
      <title>在金融科技/高度监管的组织中，有谁知道 copilot 是唯一获得安全批准的人工智能工具吗？</title>
      <link>https://www.reddit.com/r/programming/comments/1ockwsu/anyone_here_in_a_fintech_highly_regulated_org/</link>
      <description><![CDATA[我现在在一家大型金融科技公司。想想银行、信贷、BaaS。 是的，github copilot 是唯一通过安全检查的人工智能工具。 没有克劳德。没有本地跑步者。没有自定义的东西。没有互联网访问任何不是微软祝福的东西。 我一直在试验一个 CI 工作流程，它使用 copilot CLI 来自动审查依赖机器人 PR。它在技术上是可行的，但与克劳德代码之类的东西相比，它仍然是半途而废。感觉就像我正在推动 copilot 超越其舒适区。 只是好奇这种情况有多常见。  还有其他人在 CI/CD 中工作，其中 copilot 是安全性唯一允许通过的东西吗？ 有人获得 claude 或某些本地 LLM 批准使用内部开发工具吗？ 您真的对 copilot 的输出感到满意还是只是使用它，因为它是打开   主要想知道其中有多少只是受监管/企业空间中的共享现实。 银行、保险、医疗科技、政府云、国防等，在这些地方，您需要 jira 票证才能打开新端口。   由   提交/u/Beautiful_Spot5404  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ockwsu/anyone_here_in_a_fintech_highly_regulated_org/</guid>
      <pubDate>Tue, 21 Oct 2025 18:31:22 GMT</pubDate>
    </item>
    <item>
      <title>使用 AI 开发 Amazon API 的旅程。 （没有任何编程知识）</title>
      <link>https://www.reddit.com/r/programming/comments/1ocksh3/journey_of_developing_an_amazon_api_using_ai/</link>
      <description><![CDATA[]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ocksh3/journey_of_developing_an_amazon_api_using_ai/</guid>
      <pubDate>Tue, 21 Oct 2025 18:26:46 GMT</pubDate>
    </item>
    <item>
      <title>💻 TaskTracer：一款跨平台工具，用于扫描代码中的 TODO 并在一个地方管理任务</title>
      <link>https://www.reddit.com/r/programming/comments/1ockp5r/tasktracer_a_crossplatform_tool_to_scan_your_code/</link>
      <description><![CDATA[嘿r/programming！ 👋 我最近完成了一个名为 TaskTrace 的业余项目 - 一个轻量级桌面应用程序，可帮助开发人员查找、组织和导出代码中的所有 TODO 注释。它是用C#、.NET 和 Avalonia 构建的，因此可以在 Windows、macOS 和 Linux 上运行。 我为什么这么做 我经常在代码中留下 TODO，并且很难跨项目跟踪它们。 TaskTracer 扫描文件夹中的 TODO 并在简单的 UI 中显示它们 - 您还可以将列表导出到 JSON 文件，以便进一步处理或与工作流程集成。 功能  🔍 扫描任何文件夹中的 TODO 注释。 📝 将 TODO 导出为 JSON。  屏幕截图 尝试一下 在 GitHub 上查看：TaskTracer 我希望得到其他开发人员的反馈 - 改进的想法、功能请求或任何使其在现实世界中更有用的想法 项目。 感谢您的阅读！   由   提交/u/darkvoid3054  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ockp5r/tasktracer_a_crossplatform_tool_to_scan_your_code/</guid>
      <pubDate>Tue, 21 Oct 2025 18:23:22 GMT</pubDate>
    </item>
    <item>
      <title>为什么 Postgres FDW 让我的查询变慢（以及我如何修复它）|斯维克斯博客</title>
      <link>https://www.reddit.com/r/programming/comments/1ock2c4/why_postgres_fdw_made_my_queries_slow_and_how_i/</link>
      <description><![CDATA[ 由   提交/u/j_platte  [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ock2c4/why_postgres_fdw_made_my_queries_slow_and_how_i/</guid>
      <pubDate>Tue, 21 Oct 2025 18:00:29 GMT</pubDate>
    </item>
    <item>
      <title>只需 8 个简单步骤即可将 VIM 转换为代码编辑器 - 适合初学者</title>
      <link>https://www.reddit.com/r/programming/comments/1ocj0l5/convert_vim_to_code_editor_in_8_easy_steps/</link>
      <description><![CDATA[ 由   提交/u/Sushant098123  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ocj0l5/convert_vim_to_code_editor_in_8_easy_steps/</guid>
      <pubDate>Tue, 21 Oct 2025 17:21:37 GMT</pubDate>
    </item>
    <item>
      <title>最近科技公司裁员的真正原因是什么？这不是人工智能。</title>
      <link>https://www.reddit.com/r/programming/comments/1ociu41/the_real_reason_for_recent_tech_layoffs_its_not_ai/</link>
      <description><![CDATA[裁员在科技界并不是什么新鲜事。但最近，每份新闻稿中都出现了一条新的台词——一个闪亮的、未来主义的理由：人工智能。   由   提交/u/nullstillstands  [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ociu41/the_real_reason_for_recent_tech_layoffs_its_not_ai/</guid>
      <pubDate>Tue, 21 Oct 2025 17:14:52 GMT</pubDate>
    </item>
    <item>
      <title>连接池耗尽：无声的杀手</title>
      <link>https://www.reddit.com/r/programming/comments/1ochumi/connection_pool_exhaustion_the_silent_killer/</link>
      <description><![CDATA[为什么这很重要 连接池是现代应用程序重用昂贵的网络套接字而不是为每个请求创建新的网络套接字的方式。只要连接快速循环，包含 50 个连接的池就可以处理数百万个请求。但一旦连接卡住（查询缓慢、网络挂起、死锁），池就会缩小。当它达到零时，你不仅变慢了，而且还变慢了。你死定了。 现实世界：LinkedIn 经历了 4 小时的中断，当时存储过程变得缓慢，一直保持连接直到池耗尽。当下游服务变得缓慢、连接不足并阻止所有交易时，Stripe 就会出现级联支付失败的情况。这些不是容量问题；而是容量问题。它们是循环问题。    由   提交/u/Extra_Ear_10   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ochumi/connection_pool_exhaustion_the_silent_killer/</guid>
      <pubDate>Tue, 21 Oct 2025 16:37:26 GMT</pubDate>
    </item>
    <item>
      <title>将大 O 表示法应用于软件设计：改变复杂性</title>
      <link>https://www.reddit.com/r/programming/comments/1oceqo7/applying_big_o_notation_to_software_design_change/</link>
      <description><![CDATA[ 由   提交 /u/EgregorAmeriki   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1oceqo7/applying_big_o_notation_to_software_design_change/</guid>
      <pubDate>Tue, 21 Oct 2025 14:39:05 GMT</pubDate>
    </item>
    <item>
      <title>工程就是科学就是工程</title>
      <link>https://www.reddit.com/r/programming/comments/1oce4m3/engineering_is_science_is_engineering/</link>
      <description><![CDATA[我一直在思考现在的软件工程有多么像科学工作——实验、建模、迭代。我试图在一篇文章中探讨这种重叠，很想听听这是否与您的经历产生共鸣。   由   提交 /u/Tiendil   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1oce4m3/engineering_is_science_is_engineering/</guid>
      <pubDate>Tue, 21 Oct 2025 14:14:49 GMT</pubDate>
    </item>
    <item>
      <title>URLPattern 现已成为 Baseline 全新可用</title>
      <link>https://www.reddit.com/r/programming/comments/1ocdsc8/urlpattern_is_now_baseline_newly_available/</link>
      <description><![CDATA[ 由   提交/u/feross  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ocdsc8/urlpattern_is_now_baseline_newly_available/</guid>
      <pubDate>Tue, 21 Oct 2025 14:01:17 GMT</pubDate>
    </item>
    <item>
      <title>用 Java 设计和实现 URL 缩短器</title>
      <link>https://www.reddit.com/r/programming/comments/1ocbuto/designing_and_implementing_a_url_shortener_in_java/</link>
      <description><![CDATA[在本文中，我探索了使用 Dropwizard 框架设计 URL 缩短器及其在 Java 中的实现。请随意查看！   由   提交/u/kishunkumaar   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ocbuto/designing_and_implementing_a_url_shortener_in_java/</guid>
      <pubDate>Tue, 21 Oct 2025 12:40:44 GMT</pubDate>
    </item>
    <item>
      <title>Pasta/80 是一个针对 Z80 微处理器的简单 Pascal 交叉编译器</title>
      <link>https://www.reddit.com/r/programming/comments/1ocbg19/pasta80_is_a_simple_pascal_cross_compiler/</link>
      <description><![CDATA[ 由   提交/u/mariuz  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ocbg19/pasta80_is_a_simple_pascal_cross_compiler/</guid>
      <pubDate>Tue, 21 Oct 2025 12:21:47 GMT</pubDate>
    </item>
    <item>
      <title>Walrus：根据第一原理构建的高性能存储引擎</title>
      <link>https://www.reddit.com/r/programming/comments/1ocb0w2/walrus_a_high_performance_storage_engine_built/</link>
      <description><![CDATA[嗨，最近我一直在 Rust 中开发一个名为 Walrus 的高性能存储引擎， 稍微介绍一下，Walrus 是一个根据第一原理构建的嵌入式进程内存储引擎，可以用作开箱即用的构建块：  Timeseries 事件日志：不可变的审计跟踪、合规性 追踪。每个事件都会立即保留，只读取一次。 数据库 WAL：PostgreSQL 样式事务日志。提交的最大持久性、确定性的崩溃恢复。 消息队列：Kafka 风格的流。批量写入（最多2000个条目），高吞吐量，至少一次交付。 键值存储：简单的持久缓存。每个键都是一个主题，50ms fsync 窗口快速写入。 任务队列：异步作业处理。至少使用重试安全工作人员进行一次交付（处理程序应该是幂等的）。 ...以及更多  最近的版本在其选择的工作负载（存储库中的基准）上优于单节点 apache kafka 和rocksdb 存储库：https://github.com/nubskr/walrus 如果您有兴趣了解 walrus 的内部结构，这两个发布帖子将为您提供所需的一切：  v0.1.0 发布帖子：https://nubskr.com/2025/10/06/walrus（是的，一开始应该是预写日志） v0.2.0 发布帖子：https://nubskr.com/2025/10/20/walrus_v0.2.0  我期待听到社区的反馈，海象的“分布式”版本的工作正在进行中。   由   提交 /u/Ok_Marionberry8922   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ocb0w2/walrus_a_high_performance_storage_engine_built/</guid>
      <pubDate>Tue, 21 Oct 2025 12:01:32 GMT</pubDate>
    </item>
    <item>
      <title>关注产品创意，而不是需求：构建灵活的软件设计</title>
      <link>https://www.reddit.com/r/programming/comments/1ocaxpb/focus_on_product_ideas_not_requirements_building/</link>
      <description><![CDATA[ 由   提交/u/teivah  [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ocaxpb/focus_on_product_ideas_not_requirements_building/</guid>
      <pubDate>Tue, 21 Oct 2025 11:57:18 GMT</pubDate>
    </item>
    </channel>
</rss>