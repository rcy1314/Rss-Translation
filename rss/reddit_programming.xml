<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：编程</title>
    <link>https://www.reddit.com/r/programming/new</link>
    <description>计算机编程</description>
    <lastBuildDate>Thu, 30 Oct 2025 06:36:59 GMT</lastBuildDate>
    <item>
      <title>认为 memcmp 安全吗？再想一想</title>
      <link>https://www.reddit.com/r/programming/comments/1ojs7ve/think_memcmp_is_safe_think_again/</link>
      <description><![CDATA[]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ojs7ve/think_memcmp_is_safe_think_again/</guid>
      <pubDate>Thu, 30 Oct 2025 06:17:34 GMT</pubDate>
    </item>
    <item>
      <title>需要帮助：多层密码（Caesar → Atbash → Keyword("keyword") → Rail Fence(k=2)） — 暴力破解失败</title>
      <link>https://www.reddit.com/r/programming/comments/1ojr7c2/help_needed_multilayer_cipher_caesar_atbash/</link>
      <description><![CDATA[大家好 - 我一直在研究这种多层密码，需要用新的眼光来看待。 密文（最终加密输出）： fm f zfprz md yrqvdjny ypz v wnnu dq uvx wvw yfz vdpuanf djpohy fv mavqlznu m qaf bdnvdu wnwafjh dvnm w udw dqd udcfdnf fnu ypz w udovydfaud y fonqcbx f rddhnmwpud zm d y yndrdqqvwafjh dnfsynarddb ywvwxdrudnf UKhfpn fdjd drvzhmaqnu wnw f f njpnfpad ddfyvcnfofmzfbtfb rjf f zfpcd qdndxq dzfvan xqb wntq rwxdrndxq dmv v tvwpzmwd dfd py lq qn tkvfuapnwxfznz qd  我是什么讲述加密链（按应用顺序，明文→密文）：  Caesar（未知转变） Atbash 关键字密码使用关键字：“keyword” Rail Fence with key = 2，offset = 0  因此，要解密，您需要颠倒这些步骤：RailFence⁻1 → 关键字⁻1 → Atbash⁻1 → Caesar⁻1。 我已经尝试过的内容（详尽/算法）：  使用 key=2 进行的 Rail Fence 解密均应用于：  全文，包括空格/标点符号，以及 仅字母（即，删除围栏之前的非字母，并在后续步骤中仅保留字母）。  轨道起始偏移：尝试开始轨道 = 0 和开始轨道 = 1。 关键字密码变体使用关键字： 已尝试的键控字母：关键字 + 剩余、剩余 + 关键字、关键字 + 反向（剩余）、反向（键控）以及合并 i/j 的变体（经典 Playfair 风格处理）。 两种映射约定（即，是否将键控字母用作密文字母表或明文字母表）。  Atbash（标准 a↔z）正常实现。 Caesar 转换所有 0-25（暴力）。 最后一步有两个顺序（Atbash→Caesar 和 Caesar→Atbash） - 以防描述略有不同。 评分输出通过英语启发法（常用词匹配 + 频率）并检查了最重要的候选者。  我的发现： 没有一次自动尝试产生干净、明显正确的英语明文。一些高分候选者包含看起来像损坏的英语（单词或部分单词）的片段，这表明我们已经接近，但某些参数（关键字字母表结构、Rail-Fence 的标点符号处理或凯撒细节）仍然与假设的不同。 这是我所要求的（有用的测试想法）：  如果您想尝试一下，请发布您的解密尝试并包括： 您使用的Rail-Fence解释（仅字母与全文，从0/1开始）， 哪个关键字字母表结构（精确的键控字母字符串），以及您是否假设关键字映射明文→密码或密码→明文， 是否合并i/j 或以其他方式修改了字母表， 无论您在 Caesar 之前还是之后应用了 Atbash，以及您尝试过的 Caesar shift。  如果您有最喜欢的求解器或爬山/替换求解器（例如，单字母替换的模拟退火），请在反转 Rail 后的状态上尝试一下栅栏和关键字步骤（或在较早/较晚的中间状态） - 我已经用尽了简单的强力空间，智能替换解算器可能会找到单字母映射。 如果这看起来可能是非英语或包含我没有尝试过的替换变体（例如键控 Vigenère 而不是简单的关键字单字母），请这么说 - 我对这种可能性持开放态度。  额外上下文： 如果有帮助的话，我可以提供中间状态（仅限字母/全文的 Rail-Fence 解码结果等） - 说出您想要的变体，我会粘贴它。 提前致谢 - 任何想法、线索或方向表示赞赏！   由   提交/u/Front-Cabinet4945   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ojr7c2/help_needed_multilayer_cipher_caesar_atbash/</guid>
      <pubDate>Thu, 30 Oct 2025 05:13:28 GMT</pubDate>
    </item>
    <item>
      <title>大多数敏捷/Scrum 都是苍白的模仿，一个空壳。</title>
      <link>https://www.reddit.com/r/programming/comments/1ojp9sa/is_most_agilescrum_a_pale_imitation_a_hollow_shell/</link>
      <description><![CDATA[不幸的是，在从事敏捷/Scrum工作多年后，我很少看到敏捷/Scrum的真正实现，这并不意味着我不是一个虔诚的信徒，只是敏捷/Scrum不仅仅是项目层面的范式转变，它实际上是一种文化，甚至是其核心的性格变化。模仿外在形式的 Scrum 很容易，但真正付诸实践却很难。  敏捷的核心理念是团队是适应、灵活性和卓越的关键，这就是为什么我们添加了一个额外的 scrum master 角色来设计开发团队，使其像这样行事，这就是为什么我们让团队而不是个人领导者（PO 或 SM）负责交付，这就是为什么我们采用仆人式领导而不是独裁领导，绝对抛开所有其他考虑因素，只有这种责任变化才会使敏捷对大多数组织来说成为不可能完成的任务。因为在 Scrum 中，按时、按预算交付的责任在于整个团队，而不是 PO，而不是 SM，这引发了一系列问题：  在基层，要进行富有成效的每日站会，需要每个开发人员都积极主动、善于沟通、协作且具有业务意识的团队成员，认真的吗？你基本上改变了技术团队的角色（记住有一个叫做书呆子的东西是有原因的），你希望他们一夜之间成为销售人员或顾问？你改变的是个性，而不是过程或方法。  在高级管理层，您告诉管理层是整个团队而不是个人对失败的项目负责？如果需要的话他应该解雇谁？   因此，实际上，SM要么成为抄写员，要么成为助理PM，PO仍然负责项目，开发团队只是觉得这又是一场职能头韵管理的表演。    由   提交 /u/DK_ZJJ0801   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ojp9sa/is_most_agilescrum_a_pale_imitation_a_hollow_shell/</guid>
      <pubDate>Thu, 30 Oct 2025 03:26:53 GMT</pubDate>
    </item>
    <item>
      <title>为什么Python的OrderedDict是有序的？</title>
      <link>https://www.reddit.com/r/programming/comments/1ojp0tm/why_is_pythons_ordereddict_ordered/</link>
      <description><![CDATA[ 由   提交 /u/stackoverflooooooow   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ojp0tm/why_is_pythons_ordereddict_ordered/</guid>
      <pubDate>Thu, 30 Oct 2025 03:14:21 GMT</pubDate>
    </item>
    <item>
      <title>团队如何应对人工智能疲劳？</title>
      <link>https://www.reddit.com/r/programming/comments/1ojna4m/how_are_teams_handling_ai_fatigue/</link>
      <description><![CDATA[我为开发人员推出了人工智能编码助手，我注意到一件事 - 开发人员的工作时间增加了，但生产力却没有增加。他们现在花在审查和修复人工智能问题上的时间比发布功能的时间还要多。我目前的理论：人工智能帮助的是个人，而不是团队。 您现在看到最大的差距在哪里？将需求转化为开发人员任务？知道错位是从哪里产生的吗？还是跟上潮流？好奇领导者对此正在做什么。   由   提交 /u/Temporary_Papaya_199   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ojna4m/how_are_teams_handling_ai_fatigue/</guid>
      <pubDate>Thu, 30 Oct 2025 01:50:09 GMT</pubDate>
    </item>
    <item>
      <title>对我的网站的意见和任何建议</title>
      <link>https://www.reddit.com/r/programming/comments/1ojn9zq/opinion_on_my_website_and_any_suggestions/</link>
      <description><![CDATA[大家好！我刚刚完成了一个小费计算器，可以帮助人们快速分摊账单并计算合理的小费。您可以输入您的总额，选择小费百分比，它会自动分配每人的金额。 现在它非常简单 - 但我想做得更好。如果您能尝试一下并告诉我：  我应该添加哪些功能？ 设计感觉干净且易于使用吗？ 有任何错误或令人困惑的部分吗？    由   提交/u/Kidkatkal   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ojn9zq/opinion_on_my_website_and_any_suggestions/</guid>
      <pubDate>Thu, 30 Oct 2025 01:49:59 GMT</pubDate>
    </item>
    <item>
      <title>新的</title>
      <link>https://www.reddit.com/r/programming/comments/1ojn0in/new_in_that/</link>
      <description><![CDATA[大家好，我是编程方面的新手，是的，我知道市场已经饱和，以防万一哈哈。您会推荐我学习哪一个？目前，我正在研究 HTML 和 CSS，我也在研究 PHP，并且我已经在 LinkedIn Learning 上完成了几门课程。 如果我已经 20 岁了，你认为为时已晚吗？   由   提交/u/Accomplished-War5138   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ojn0in/new_in_that/</guid>
      <pubDate>Thu, 30 Oct 2025 01:38:12 GMT</pubDate>
    </item>
    <item>
      <title>约翰·卡马克谈更新变量</title>
      <link>https://www.reddit.com/r/programming/comments/1ojmwd9/john_carmack_on_updating_variables/</link>
      <description><![CDATA[ 由   提交 /u/levodelellis   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ojmwd9/john_carmack_on_updating_variables/</guid>
      <pubDate>Thu, 30 Oct 2025 01:32:49 GMT</pubDate>
    </item>
    <item>
      <title>我发现的编程语言</title>
      <link>https://www.reddit.com/r/programming/comments/1ojmhp4/programming_language_i_found/</link>
      <description><![CDATA[我在浏览最近的 GitHub 帖子时看到了这个 https://github.com/Brenden-Therrien/Hash-Lang。看起来很有趣，就点进去了，确实很震撼。这是两个一直在研究“Hash”的人。一种已编译的、开源的、静态类型的编程语言，为期几个月。我已经安装了它，它在 VS Code 中运行得非常好（不确定其他 IDE），它具有智能感知和一切。我将继续学习它，但我想我会与大家分享这个发现   由   提交/u/Sea-Picture-9420   [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ojmhp4/programming_language_i_found/</guid>
      <pubDate>Thu, 30 Oct 2025 01:13:57 GMT</pubDate>
    </item>
    <item>
      <title>说“我不知道”对我来说是资历的标志</title>
      <link>https://www.reddit.com/r/programming/comments/1ojjeml/saying_i_dont_know_is_a_sign_of_seniority_for_me/</link>
      <description><![CDATA[ 由   提交/u/gregorojstersek   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ojjeml/saying_i_dont_know_is_a_sign_of_seniority_for_me/</guid>
      <pubDate>Wed, 29 Oct 2025 22:57:50 GMT</pubDate>
    </item>
    <item>
      <title>现在平均代码库有 50% 的依赖项——这可持续吗？</title>
      <link>https://www.reddit.com/r/programming/comments/1ojdrv9/the_average_codebase_is_now_50_dependencies_is/</link>
      <description><![CDATA[我看到一份内部报告显示，大多数项目在修补依赖项上花费的精力比编写应用程序逻辑更多。 “构建更少，依赖更多”是否达到了临界点？   由   提交/u/Legitimate_Sun1783   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ojdrv9/the_average_codebase_is_now_50_dependencies_is/</guid>
      <pubDate>Wed, 29 Oct 2025 19:16:55 GMT</pubDate>
    </item>
    <item>
      <title>Surf 更新：Firefox 144 的新 TLS 指纹</title>
      <link>https://www.reddit.com/r/programming/comments/1ojd7rf/surf_update_new_tls_fingerprints_for_firefox_144/</link>
      <description><![CDATA[对 Surf 进行更新，Go 的浏览器模拟 HTTP 客户端。 最新版本添加了对与以下客户端的行为相匹配的新 TLS 指纹的支持：  Firefox 144 私密模式下的 Firefox 144  这些指纹包括 TLS 扩展、签名算法、支持的组、密码套件的准确排序，以及使用正确的 GREASE 和密钥共享行为。 JA3 和 JA4 哈希值与真实浏览器匹配，包括 JA4-R 和 JA4-O。 HTTP/2 Akamai 指纹识别也保持一致。 标准模式和私有模式都得到完全保真度支持，包括支持 FakeRecordSizeLimit、支持 zlib、brotli 和 zstd 的 CompressCertificate，以及支持 MLKEM768 混合密钥交换的 X25519。 此更新还提高了与 TLS 会话恢复、混合密钥重用和类似 Tor 流量的加密客户端问候的兼容性。 如果您发现新指纹有任何不匹配或问题，请告诉我。   由   提交/u/Affectionate_Type486   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ojd7rf/surf_update_new_tls_fingerprints_for_firefox_144/</guid>
      <pubDate>Wed, 29 Oct 2025 18:56:11 GMT</pubDate>
    </item>
    <item>
      <title>教育基准：移动逻辑压缩 1 亿条记录（Python + SQLite + Zlib）</title>
      <link>https://www.reddit.com/r/programming/comments/1ojc99d/educational_benchmark_100_million_records_with/</link>
      <description><![CDATA[简介 这是一个关于 Python 如何通过应用逻辑和语义压缩来处理大量数据的教育性和探索性实验，我将这个概念称为 LSC（逻辑语义压缩）。 该提案是仅使用 Python、SQLite 和 Zlib 生成 1 亿条结构化记录并将它们存储在压缩块中 — 没有并行性，也没有高性能外部  ⚙️环境配置 设备：Android（通过 Termux） 语言：Python 3 数据库：SQLite 压缩：zlib 模式：单核 总记录数：100,000,000 批次：每个 1,000 条记录chunk 定期提交：每 3 个块  🧩 逻辑结构 生成的每条记录都遵循简单的语义模式： { &quot;id&quot;: i, &quot;title&quot;: f&quot;Book {i}&quot;, &quot;author&quot;: &quot;random letter string&quot;, &quot;year&quot;: number Between 1950 年和 2024 年，“类别”：“浪漫/科学/历史” } 这些记录被分组为块，在存储到数据库之前，它们被转换为 JSON 并使用 zlib 进行压缩。每个块代表一个“逻辑包”——LSC 中的一个中心概念。  ⚙️ 代码主要摘录 json_bytes = json.dumps(batch, seperators=(&#39;,&#39;, &#39;:&#39;)).encode() comp_blob = zlib.compress(json_bytes, ZLIB_LEVEL) cur.execute( &quot;INSERT INTO chunks (start_id, end_id, blob, count) VALUES (?, ?, ?, ?)&quot;, (i - BATCH_SIZE + 1, i, sqlite3.Binary(comp_blob), len(batch)) ) 代码执行：  记录的语义生成 JSON序列化 逻辑压缩（Zlib） 写入 SQLite   🚀 基准结果 结果指标 📊 生成 100,000,000 条记录 🧩 处理 100,000 条数据块 📦压缩后的大小 ~2 GB 📤 未压缩的大小 ~10 GB ⚙️ 压缩率 ~20% ⏱️ 总时间 ~50 秒（约） ⚡ 平均速度 ~200,000 条记录/秒 🔸 单核模式（CPU 密集）  🔬 观察结果 即使是在智能手机上运行，结果也出奇的稳定。压缩率保持在 20% 左右，块之间的差异很小。 这表明，有了良好的逻辑数据结构，无需借助 C/C++ 中的并行性或优化，就可以获得相当高的效率。  🧠 关于 LSC LSC（逻辑语义压缩）不是一个库，而是一个想法：  根据逻辑结构压缩数据和语义重复，而不仅仅是在原始字节中。  因此，每个块不仅承载信息，还承载记录之间的关系和连贯性。压缩成为数据含义的反映，而不仅仅是其大小。  🎓 结论 即使在单核模式下运行并使用简单的配置，Python 也表明可以处理 1 亿条结构化记录，保持一致的压缩和低碎片。  🔍 这个实验强化了这样的想法：数据的逻辑组织可以像技术优化一样强大。    由   提交/u/MajorPistola   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ojc99d/educational_benchmark_100_million_records_with/</guid>
      <pubDate>Wed, 29 Oct 2025 18:20:23 GMT</pubDate>
    </item>
    <item>
      <title>Vi /Vim 编辑器：每个开发人员、系统管理员和 DevOps 工程师都应该知道的实用命令。</title>
      <link>https://www.reddit.com/r/programming/comments/1ojbu0m/vi_vim_editor_practical_commands_every_developer/</link>
      <description><![CDATA[我整理了一份 vi 命令的简单指南，这些年来在 Linux 上编辑配置或脚本时，这些指南实际上对我很有帮助。 简短、实用且专注于真实示例。 如果我遗漏了一些内容，请告诉我。.很乐意接受反馈并将其制作为详尽的列表！ 在此处阅读   由   提交/u/sshetty03  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ojbu0m/vi_vim_editor_practical_commands_every_developer/</guid>
      <pubDate>Wed, 29 Oct 2025 18:04:39 GMT</pubDate>
    </item>
    <item>
      <title>我们如何持续交付软件</title>
      <link>https://www.reddit.com/r/programming/comments/1ojbos8/how_we_continually_deliver_software/</link>
      <description><![CDATA[ 由   提交/u/paltman94  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ojbos8/how_we_continually_deliver_software/</guid>
      <pubDate>Wed, 29 Oct 2025 17:59:37 GMT</pubDate>
    </item>
    </channel>
</rss>