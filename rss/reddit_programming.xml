<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：编程</title>
    <link>https://www.reddit.com/r/programming/new</link>
    <description>计算机编程</description>
    <lastBuildDate>Tue, 28 Oct 2025 06:36:43 GMT</lastBuildDate>
    <item>
      <title>编译器的魔力和太聪明的代价</title>
      <link>https://www.reddit.com/r/programming/comments/1oi1fsi/compiler_magic_and_the_costs_of_being_too_clever/</link>
      <description><![CDATA[这是受到 Vercel 新工作流功能发布的启发，该功能采用两个 TypeScript 指令（“使用工作流”和“使用步骤”）并将普通的异步函数转变为长期、持久的工作流。好吧，我总体上持怀疑态度，这段视频探讨了原因。  对于不耐烦的人的总结：TypeScript 并不是一根使各种新魔法成为可能的魔杖。    由   提交/u/stumblingtowards  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1oi1fsi/compiler_magic_and_the_costs_of_being_too_clever/</guid>
      <pubDate>Tue, 28 Oct 2025 05:40:09 GMT</pubDate>
    </item>
    <item>
      <title>Java 发布了新的早期访问 JDK 版本，其中包括值类！</title>
      <link>https://www.reddit.com/r/programming/comments/1ohzz8u/java_has_released_a_new_early_access_jdk_build/</link>
      <description><![CDATA[ 由   提交/u/davidalayachew   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ohzz8u/java_has_released_a_new_early_access_jdk_build/</guid>
      <pubDate>Tue, 28 Oct 2025 04:11:53 GMT</pubDate>
    </item>
    <item>
      <title>Web 开发中的 AI - 这改变了一切 |我从事 Web 开发已有 10 年 |自从 Agentic AI 在 GitHub Copilot 中可用以来，我一直在使用它 |</title>
      <link>https://www.reddit.com/r/programming/comments/1ohvpur/ai_in_web_development_this_changes_everything_i/</link>
      <description><![CDATA[ 由   提交/u/Frequent-Football984   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ohvpur/ai_in_web_development_this_changes_everything_i/</guid>
      <pubDate>Tue, 28 Oct 2025 00:42:36 GMT</pubDate>
    </item>
    <item>
      <title>PostgreSQL 的扩展策略（垂直扩展、水平扩展和其他高可用性策略）</title>
      <link>https://www.reddit.com/r/programming/comments/1ohvlhi/strategies_for_scaling_postgresql_vertical/</link>
      <description><![CDATA[ 由   提交 /u/pgEdge_Postgres   [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ohvlhi/strategies_for_scaling_postgresql_vertical/</guid>
      <pubDate>Tue, 28 Oct 2025 00:37:05 GMT</pubDate>
    </item>
    <item>
      <title>使用 Renovate 自动更新项目依赖项</title>
      <link>https://www.reddit.com/r/programming/comments/1ohthcb/automatically_update_project_dependencies_with/</link>
      <description><![CDATA[ 由   提交 /u/wineandcode   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ohthcb/automatically_update_project_dependencies_with/</guid>
      <pubDate>Mon, 27 Oct 2025 23:04:02 GMT</pubDate>
    </item>
    <item>
      <title>衡量工程生产力</title>
      <link>https://www.reddit.com/r/programming/comments/1ohqpvu/measuring_engineering_productivity/</link>
      <description><![CDATA[ 由   提交/u/duruq  [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ohqpvu/measuring_engineering_productivity/</guid>
      <pubDate>Mon, 27 Oct 2025 21:12:39 GMT</pubDate>
    </item>
    <item>
      <title>无错误政策</title>
      <link>https://www.reddit.com/r/programming/comments/1ohqf61/no_bug_policy/</link>
      <description><![CDATA[ 由   提交/u/_Krayorn_  [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ohqf61/no_bug_policy/</guid>
      <pubDate>Mon, 27 Oct 2025 21:01:02 GMT</pubDate>
    </item>
    <item>
      <title>从网格到紧凑令牌：像素艺术的压缩。</title>
      <link>https://www.reddit.com/r/programming/comments/1ohqd40/from_a_grid_to_a_compact_token_compression_of_a/</link>
      <description><![CDATA[我写了这篇关于我从事的项目的技术博客文章。这是一个有趣的挑战。我从中学到了很多东西。   由   提交 /u/pepe_torres1998   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ohqd40/from_a_grid_to_a_compact_token_compression_of_a/</guid>
      <pubDate>Mon, 27 Oct 2025 20:58:48 GMT</pubDate>
    </item>
    <item>
      <title>后台代理：让团队的知识自行书写</title>
      <link>https://www.reddit.com/r/programming/comments/1ohngrc/background_agents_letting_your_teams_knowledge/</link>
      <description><![CDATA[ 由   提交/u/Intelligent_Camp_762   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ohngrc/background_agents_letting_your_teams_knowledge/</guid>
      <pubDate>Mon, 27 Oct 2025 19:09:32 GMT</pubDate>
    </item>
    <item>
      <title>我构建了同一个应用程序 10 次：评估移动性能框架</title>
      <link>https://www.reddit.com/r/programming/comments/1ohn634/i_built_the_same_app_10_times_evaluating/</link>
      <description><![CDATA[ 由   提交/u/lorenseanstewart  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ohn634/i_built_the_same_app_10_times_evaluating/</guid>
      <pubDate>Mon, 27 Oct 2025 18:58:49 GMT</pubDate>
    </item>
    <item>
      <title>如何在事件驱动架构中设计和测试读取模型</title>
      <link>https://www.reddit.com/r/programming/comments/1ohlczl/how_to_design_and_test_read_models_in_eventdriven/</link>
      <description><![CDATA[ 由   提交 /u/Adventurous-Salt8514   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ohlczl/how_to_design_and_test_read_models_in_eventdriven/</guid>
      <pubDate>Mon, 27 Oct 2025 17:51:43 GMT</pubDate>
    </item>
    <item>
      <title>我的第一家初创公司的糟糕技术架构</title>
      <link>https://www.reddit.com/r/programming/comments/1ohkm2m/the_terrible_technical_architecture_of_my_first/</link>
      <description><![CDATA[ 由   提交/u/jacobs-tech-tavern   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ohkm2m/the_terrible_technical_architecture_of_my_first/</guid>
      <pubDate>Mon, 27 Oct 2025 17:24:08 GMT</pubDate>
    </item>
    <item>
      <title>Spring Boot 中异步 Webhooks 的线程池调优：真实经验教训和实用指南</title>
      <link>https://www.reddit.com/r/programming/comments/1ohjuen/thread_pool_tuning_for_async_webhooks_in_spring/</link>
      <description><![CDATA[我最近写了一篇关于在 Spring Boot 中优化 webhook 和异步调用线程池的详细指南。它的目的是帮助初级 Java 开发人员通过实际的线程池调整来更多地利用我们的后端服务。 我希望获得您的想法、实际经验和反馈！ 链接： https://medium.com/gitconnected/how-to-tune-thread-pools-for-webhooks-and-async-calls-in-spring-boot-e9b76095347e?sk=f4304bb38bd2f44820647f7af6dc822b   由   提交/u/sshetty03  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ohjuen/thread_pool_tuning_for_async_webhooks_in_spring/</guid>
      <pubDate>Mon, 27 Oct 2025 16:56:05 GMT</pubDate>
    </item>
    <item>
      <title>[项目] PyTorch 中的自适应稀疏训练 — 训练速度提高 2-3 倍，能量减少约 61%（在 ImageNet-100 上具有相同的精度）</title>
      <link>https://www.reddit.com/r/programming/comments/1ohj74h/project_adaptive_sparse_training_in_pytorch_23/</link>
      <description><![CDATA[如果您希望在不更改模型的情况下使训练循环更便宜、更快，这可能很有用。 我开源了自适应稀疏训练 (AST) 的 PyTorch 实现，它只选择每个时期信息最丰富的样本，因此您可以跳过“简单”示例上的反向传播。在带有预训练 ResNet-50 的 ImageNet-100 上，它与基线精度相匹配，同时减少了约 61% 的能量。更激进的模式可实现 2.78 倍加速，但精度下降约 1-2 个百分点。 为什么程序员可能会关心  插入：保留模型/优化器/时间表；在损失周围添加几行以仅激活前 K% 样本。 更低的费用/更快的 CI：挂钟训练时间加速约 1.9–2.8 倍。 便携式：适用于免费的 Kaggle P100；没有外来操作或自定义 CUDA。 确定性和确定性。可测试：单前向传递，矢量化掩蔽；微小的开销。  它是如何工作的（核心思想） 每个批次使用损失幅度和预测不确定性（熵）计算每个样本的显着性分数。只有前 K% 的“活跃”样本才会贡献梯度。简单的 PI 控制器使激活率保持在目标附近。 # logits: [B, C], Targets: [B] loss_vec = F.cross_entropy(logits, Targets,duction=“none”) # 每个样本损失 probs = logits.softmax(dim=1) entropy = -(probs * probs.clamp_min(1e-12).log()).sum(dim=1) # 每个样本熵显着性 = 0.7 * loss_vec + 0.3 * 熵 # 可加权 thr =controller.update(significance, target_activation=0.35) # 例如35% active = (significance &gt;= thr) # 仅活跃样本贡献；单次前向传递，无需重新计算损失 = (loss_vec * active.float()).sum() / active.float().sum().clamp_min(1.0) loss.backward()   无第二次前向：仅屏蔽每个样本的损失。 PI 控制器调整 thr 保持约 10–40% 的活跃度（可配置）。  结果（在 IN-1K 上预训练的 ImageNet-100、ResNet-50） 生产（最佳准确度）  Top-1： 92.12%（基线 92.18%）→ Δ +0.06 pp 能量： –61.49% 速度： 1.92× 激活： 38.51% 样本/周期  效率（最大 速度）  Top-1： 91.92% 能量： –63.36% 速度： 2.78× 激活： 36.64%  设置：10 纪元预热 u/100% 样本 → 90 纪元 AST u/10–40%；基线和 AST 均开启 AMP；相同的 aug/optimizer/schedule 进行奇偶校验。 尝试一下 git clone https://github.com/oluwafemidiakhoa/adaptive-sparse-training cd adjustment-sparse-training # (可选) conda create -n ast python=3.10 &amp;&amp; conda activate ast pip install -rrequirements.txt # 生产（注重精度） python KAGGLE_IMAGENET100_AST_PRODUCTION.py --data /path/to/imagenet100 # 效率（最大速度） python KAGGLE_IMAGENET100_AST_TWO_STAGE_Prod.py --data /path/to/imagenet100   仓库： https://github.com/oluwafemidiakhoa/adaptive-sparse-training 使用哪个脚本： FILE_GUIDE.md 更多详细信息： README.md  寻求反馈  大规模实现每样本损失+掩蔽的最简洁方式 代码库？ 熵的替代方案（例如，边际、温度缩放置信度、MC-dropout 方差）？ 与梯度累积/DDP / ZeRO 集成时遇到的问题？ 您下一步想看到的基准（ImageNet-1K、LLM 微调等）？  很高兴回答问题或 审核 PR。   由   提交 /u/Klutzy-Aardvark4361   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ohj74h/project_adaptive_sparse_training_in_pytorch_23/</guid>
      <pubDate>Mon, 27 Oct 2025 16:32:04 GMT</pubDate>
    </item>
    <item>
      <title>美好的住宿体验——这是科技工作者的新现实</title>
      <link>https://www.reddit.com/r/programming/comments/1ohifyi/the_great_stay_heres_the_new_reality_for_tech/</link>
      <description><![CDATA[ 由   提交/u/KitchenTaste7229  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ohifyi/the_great_stay_heres_the_new_reality_for_tech/</guid>
      <pubDate>Mon, 27 Oct 2025 16:04:18 GMT</pubDate>
    </item>
    </channel>
</rss>