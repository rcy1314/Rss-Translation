<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：编程</title>
    <link>https://www.reddit.com/r/programming/new</link>
    <description>计算机编程</description>
    <lastBuildDate>Sat, 25 Oct 2025 09:22:20 GMT</lastBuildDate>
    <item>
      <title>我认识的最好的程序员不再编程了</title>
      <link>https://www.reddit.com/r/programming/comments/1ofn6ac/the_best_programmer_i_know_does_not_program/</link>
      <description><![CDATA[我有一位绝对天才的朋友，他可以立即掌握任何概念。他是迄今为止我认识的最快、最有才华的程序员。我有一段时间没和他说话了，昨天他告诉我他不再编程了。他已经成为一切人工智能自动化流程的专家。使用 n8n（我刚刚检查过它在 github 上有 152K 颗星：O）和光标来处理任何问题（用简单的英语），并且他对公司中的每个人都强制执行相同的做法。由于他的客户知道他们可以更快地实现更多目标，因此他们变得比以前更加急躁并且期望更高。 我知道这种新的编程方式即将到来，但与他聊天让我点击了。这种情况已经发生了，实际上我们适应得越快，专业发展可能就越好。显然，任何擅长编程的人都能够将逻辑和技术知识应用到其他工具中，但我特指的是编写代码，显然不再需要它了。也许比我们想象的要早。只是更高层次的东西，比如连接系统和用户体验焦点。  你经历过这样剧烈的变化吗？   由   提交/u/OpeningChemical5316   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ofn6ac/the_best_programmer_i_know_does_not_program/</guid>
      <pubDate>Sat, 25 Oct 2025 09:21:51 GMT</pubDate>
    </item>
    <item>
      <title>寻找技术联合创始人|人工智能驱动的创作者平台 |超过 1,000 名用户，WOW 增长 30%，种子前活跃 |我上次创业赚了 10 万美元以上</title>
      <link>https://www.reddit.com/r/programming/comments/1ofn420/looking_for_a_tech_cofounder_aipowered_creator/</link>
      <description><![CDATA[大家好， 我是一名 2x 创始人：与 70 多个品牌和公司合作过。为他们带来了 1.1B+ 的有机观看次数、2400 万+ 订阅者、我自己建立了 10 万+ 个人品牌以及 10 万美元以上的自举收入。 我正在构建一个人工智能驱动的移动平台，该平台可以自动实现创作者货币化 - 课程、社区、渠道和营销集中在一个地方。我们正在用一个人工智能原生操作系统取代整个创作者业务堆栈（10 多个工具）。 速览：  仅 3 周前推出 1,400 多名用户，每周增长约 30% 30 多个客户正在酝酿中 工作产品（React Native + Next.js 积极的投资者对话 预种子 寻找拥有大量股权的技术联合创始人  您的角色：  完全掌控技术方面：架构、AI/ML 集成、扩展路线图、团队建设。 塑造 1000 → 100k+ 用户的产品。 联合创始人拥有大量股权  我要找的人：  技术：强大的 React Native（移动）+ React/Next.js 经验 AI/ML 集成经验（最好是法学硕士、生成模型） 您已经扩展过产品或了解 10 万以上的用户基础设施 支付系统（印度/全球）、云架构、ML 管道 快速交付、迭代 基于用户反馈 对人工智能优先的产品开发感到兴奋 关心移动用户体验和简单性  如果您对此感兴趣，我的私信是开放的。如果您认为合适的人，请随时推荐他们。   由   提交&lt;一 href=&quot;https://www.reddit.com/user/SpiritedAd2200&quot;&gt;/u/SpiritedAd2200   [链接]   &lt;跨度&gt;[评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ofn420/looking_for_a_tech_cofounder_aipowered_creator/</guid>
      <pubDate>Sat, 25 Oct 2025 09:17:54 GMT</pubDate>
    </item>
    <item>
      <title>支持 OCR 的快速文档提取库</title>
      <link>https://www.reddit.com/r/programming/comments/1ofmxuh/fast_document_extraction_library_with_ocr_support/</link>
      <description><![CDATA[我一直在为个人项目开发一个文档提取库，并希望分享它：extractous-go，Extractous 库的 Go 绑定。 我一直在寻找能够快速从 PDF、Word 文档、电子表格和我正在构建的 RAG 应用程序的其他格式中提取文本的工具。非结构化 io 速度慢且内存繁重，而且纯 Go 解决方案没有我需要的格式覆盖范围。 Extractous 看起来很完美，因为它在底层使用 Apache Tika，但只有 Rust 和 Python 绑定，因此我构建了 Go 版本。 它的作用：  从多种文件格式（PDF、DOCX、XLSX、HTML 等）中提取文本 通过 Tesseract 对扫描文档提供 OCR 支持 用于低内存占用的大文件的流式 API 跨平台：Linux、macOS、Windows  简单示例：  goextractor := extractous.New() content,metadata, err := extractor.ExtractFileToString(&quot;document.pdf&quot;)  希望得到任何尝试过它或有建议的人的反馈！   由   提交 /u/ChattyChidiya   [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ofmxuh/fast_document_extraction_library_with_ocr_support/</guid>
      <pubDate>Sat, 25 Oct 2025 09:07:10 GMT</pubDate>
    </item>
    <item>
      <title>C实际上没有传递引用</title>
      <link>https://www.reddit.com/r/programming/comments/1ofjlo8/c_actually_dont_have_passbyreference/</link>
      <description><![CDATA[ 由   提交/u/Sushant098123  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ofjlo8/c_actually_dont_have_passbyreference/</guid>
      <pubDate>Sat, 25 Oct 2025 05:34:22 GMT</pubDate>
    </item>
    <item>
      <title>什么是 Monad？</title>
      <link>https://www.reddit.com/r/programming/comments/1ofijln/what_are_monads/</link>
      <description><![CDATA[我是一个想成为 youtuber 的人。请你们回顾一下我在此视频中实际可以改进的地方。 https://youtu.be/nH4rnr5Xk6g 提前致谢。   由   提交/u/Tasty-Series3748   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ofijln/what_are_monads/</guid>
      <pubDate>Sat, 25 Oct 2025 04:32:46 GMT</pubDate>
    </item>
    <item>
      <title>分布式键值存储的基准</title>
      <link>https://www.reddit.com/r/programming/comments/1ofi1wt/benchmarks_for_a_distributed_keyvalue_store/</link>
      <description><![CDATA[嘿伙计们 我一直在开发一个名为 SevenDB 的项目 - 它是一个反应式数据库（或者更确切地说是一个分布式键值存储），专注于确定性和可预测复制（基于 Raft），我们 已经完成了 raft、持久订阅、排放合同等工作，现在是展示工作的时候了。我正在尝试建立一个公平和透明的基准测试设置来共享性能数据。 如果您正在评估这样的新系统，您认为什么基准测试有意义？ 我知道原始吞吐量很好，但是我应该运行和显示哪些基准测试来证明数据库的实用性？ 我只是想设计一个可靠的测试套件，对于了解该系统的人来说是有意义的 这东西比我做的好。由于这项工作是开源的，采用率将在很大程度上取决于我们展示的基准以及我们在基准中的表现 很想听听什么样的指标或实验让您认真对待新的数据库。   由   提交 /u/shashanksati   [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ofi1wt/benchmarks_for_a_distributed_keyvalue_store/</guid>
      <pubDate>Sat, 25 Oct 2025 04:04:44 GMT</pubDate>
    </item>
    <item>
      <title>90 年代的 Vibe 编码</title>
      <link>https://www.reddit.com/r/programming/comments/1ofeinl/vibe_coding_in_the_90s/</link>
      <description><![CDATA[ 由   提交/u/esesci  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ofeinl/vibe_coding_in_the_90s/</guid>
      <pubDate>Sat, 25 Oct 2025 00:59:15 GMT</pubDate>
    </item>
    <item>
      <title>结构化日志记录如何帮助您避免控制台输出混乱</title>
      <link>https://www.reddit.com/r/programming/comments/1ofct15/how_structured_logging_saves_you_from_console/</link>
      <description><![CDATA[ 由   提交 /u/congolomera   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ofct15/how_structured_logging_saves_you_from_console/</guid>
      <pubDate>Fri, 24 Oct 2025 23:34:35 GMT</pubDate>
    </item>
    <item>
      <title>microlog,C语言中的轻量级通用日志库。只有两个文件,下载microlog的源码_GitHub_酷徒与 C++、嵌入式项目和大多数主要编译器兼容。由单元测试覆盖。</title>
      <link>https://www.reddit.com/r/programming/comments/1ofbdj9/github_andrmicrolog_a_lightweight_universal/</link>
      <description><![CDATA[ 由   提交/u/agramakov  [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ofbdj9/github_andrmicrolog_a_lightweight_universal/</guid>
      <pubDate>Fri, 24 Oct 2025 22:29:02 GMT</pubDate>
    </item>
    <item>
      <title>在 Zig 中构建 Redis 克隆 — 第 3 部分</title>
      <link>https://www.reddit.com/r/programming/comments/1ofazox/building_a_redis_clone_in_zigpart_3/</link>
      <description><![CDATA[ 由   提交 /u/pseudocharleskk   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ofazox/building_a_redis_clone_in_zigpart_3/</guid>
      <pubDate>Fri, 24 Oct 2025 22:11:49 GMT</pubDate>
    </item>
    <item>
      <title>五个为什么：丰田寻找软件问题根本原因的框架</title>
      <link>https://www.reddit.com/r/programming/comments/1of9qf4/five_whys_toyotas_framework_for_finding_root/</link>
      <description><![CDATA[ 由   提交/u/dmp0x7c5  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1of9qf4/five_whys_toyotas_framework_for_finding_root/</guid>
      <pubDate>Fri, 24 Oct 2025 21:17:47 GMT</pubDate>
    </item>
    <item>
      <title>原创作品现已濒临灭绝</title>
      <link>https://www.reddit.com/r/programming/comments/1of973a/original_work_is_now_an_endangered_species/</link>
      <description><![CDATA[ 由   提交 /u/Beautiful-Floor-7801   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1of973a/original_work_is_now_an_endangered_species/</guid>
      <pubDate>Fri, 24 Oct 2025 20:55:42 GMT</pubDate>
    </item>
    <item>
      <title>Minio 社区并未积极开发新功能</title>
      <link>https://www.reddit.com/r/programming/comments/1of8ak4/minio_community_is_not_actively_being_developed/</link>
      <description><![CDATA[ 由   提交 /u/He_knows   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1of8ak4/minio_community_is_not_actively_being_developed/</guid>
      <pubDate>Fri, 24 Oct 2025 20:18:49 GMT</pubDate>
    </item>
    <item>
      <title>未来低级语言的愿景</title>
      <link>https://www.reddit.com/r/programming/comments/1of31ci/a_vision_for_future_lowlevel_languages/</link>
      <description><![CDATA[ 由   提交/u/RndmPrsn11   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1of31ci/a_vision_for_future_lowlevel_languages/</guid>
      <pubDate>Fri, 24 Oct 2025 16:54:15 GMT</pubDate>
    </item>
    <item>
      <title>Ken Thompson 的“Trusting Trust”编译器后门 - 现在提供实际源代码 (2023)</title>
      <link>https://www.reddit.com/r/programming/comments/1of2toi/ken_thompsons_trusting_trust_compiler_backdoor/</link>
      <description><![CDATA[Ken Thompson 1984 年的“对信任信任的反思”是供应链安全方面的基础论文，证明仅信任源代码是不够的 - 您必须信任整个工具链。 攻击分三个阶段进行：  自我复制：创建一个输出自己的源代码（a quine）的程序 编译器学习：使用编译器的自编译来教它以下知识： 仅存在于二进制文件中 特洛伊木马部署：注入后门： 编译login.c时插入密码后门 编译编译器时重新注入自身 “训练”后在源代码中不留下任何痕迹   2023 年，在 Russ Cox 的要求下，Thompson 最终发布了实际代码（文件：nih.a）。我编写了详细的演练，并逐行注释了实际实现。 为什么这对现代安全性很重要：  强调源代码审计的局限性 可重现构建计划的基础（Debian 等） 与当前的供应链攻击相关（SolarWinds、XZ） Utils） 说明为什么需要多样化的双重编译（DDC）  后门密码为“codenih” （NIH =“不是这里发明的”）。 Thompson 确认它是作为概念验证而构建的，但从未在生产中部署。   由   提交 /u/fizzner   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1of2toi/ken_thompsons_trusting_trust_compiler_backdoor/</guid>
      <pubDate>Fri, 24 Oct 2025 16:46:13 GMT</pubDate>
    </item>
    </channel>
</rss>