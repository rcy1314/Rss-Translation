<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：编程</title>
    <link>https://www.reddit.com/r/programming/new</link>
    <description>计算机编程</description>
    <lastBuildDate>Sun, 19 Oct 2025 21:19:33 GMT</lastBuildDate>
    <item>
      <title>可视化 C++ 对象内存布局第 1 部分：单一继承</title>
      <link>https://www.reddit.com/r/programming/comments/1ob0963/visualizing_the_c_object_memory_layout_part_1/</link>
      <description><![CDATA[我最近踏上了（尝试）揭开 C++ 对象在内存中的样子的旅程。每当我认为我已经掌握了扎实的知识时，我就会重新审视这个主题，并意识到我仍然存在差距。因此，我决定深入研究并记录我的发现。结果是一系列实践实验，探索 vptr、vtable 以及编译器如何在内存中组织基类和派生成员等概念。我尝试使用现代 (c++23) 功能，例如用于指针算术的 std::uintptr_t 、用于访问原始字节的 std::bytes 和 std::as_bytes 。在我的帖子中，我将 GitHub 存储库与实验链接起来。 我喜欢通过可视化概念、大量图表和演示来学习，因此我的帖子中都有很多内容 :) 这只是一个系列的开始，因此还会有更多部分！ 我仍在自学，因此欢迎任何反馈！   由   提交/u/Sofiabelen15   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ob0963/visualizing_the_c_object_memory_layout_part_1/</guid>
      <pubDate>Sun, 19 Oct 2025 20:30:41 GMT</pubDate>
    </item>
    <item>
      <title>一致的散列</title>
      <link>https://www.reddit.com/r/programming/comments/1ob05pp/consistent_hashing/</link>
      <description><![CDATA[ 由   提交/u/self   [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ob05pp/consistent_hashing/</guid>
      <pubDate>Sun, 19 Oct 2025 20:26:51 GMT</pubDate>
    </item>
    <item>
      <title>Kortx-mcp 简介：拥有一位处理复杂任务的 AI 顾问</title>
      <link>https://www.reddit.com/r/programming/comments/1ob01er/introducing_kortxmcp_have_an_ai_consultant_for/</link>
      <description><![CDATA[ 由   提交 /u/sleepy_ghost   [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ob01er/introducing_kortxmcp_have_an_ai_consultant_for/</guid>
      <pubDate>Sun, 19 Oct 2025 20:22:09 GMT</pubDate>
    </item>
    <item>
      <title>LoC 是一个愚蠢的函数度量</title>
      <link>https://www.reddit.com/r/programming/comments/1oaxrdz/loc_is_a_dumb_metric_for_functions/</link>
      <description><![CDATA[大家好！当关于函数清洁度的讨论是由“代码行数”驱动时，我感到很恼火。作为标准，所以我编写了关于何时将函数分解为更小的函数的唯一指南。   由   提交 /u/The_Axolot   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1oaxrdz/loc_is_a_dumb_metric_for_functions/</guid>
      <pubDate>Sun, 19 Oct 2025 18:53:23 GMT</pubDate>
    </item>
    <item>
      <title>通过法学硕士探索代码库的简单方法</title>
      <link>https://www.reddit.com/r/programming/comments/1oaxfr8/a_simple_way_to_explore_codebases_with_llms/</link>
      <description><![CDATA[ 由   提交 /u/congolomera   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1oaxfr8/a_simple_way_to_explore_codebases_with_llms/</guid>
      <pubDate>Sun, 19 Oct 2025 18:40:45 GMT</pubDate>
    </item>
    <item>
      <title>如何使用 GPT-5、FastAPI 和 Celery 构建智能网站分析器</title>
      <link>https://www.reddit.com/r/programming/comments/1oaw8g2/how_to_build_a_smart_website_analyzer_with_gpt5/</link>
      <description><![CDATA[ 由   提交/u/fastlaunchapidev  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1oaw8g2/how_to_build_a_smart_website_analyzer_with_gpt5/</guid>
      <pubDate>Sun, 19 Oct 2025 17:55:00 GMT</pubDate>
    </item>
    <item>
      <title>软件质量大崩溃：我们如何使灾难正常化</title>
      <link>https://www.reddit.com/r/programming/comments/1oavl59/the_great_software_quality_collapse_how_we/</link>
      <description><![CDATA[ 由   提交/u/corp_code_slinger  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1oavl59/the_great_software_quality_collapse_how_we/</guid>
      <pubDate>Sun, 19 Oct 2025 17:29:56 GMT</pubDate>
    </item>
    <item>
      <title>本地RAG教程-FastAPI & Ollama & pgvector</title>
      <link>https://www.reddit.com/r/programming/comments/1oavilf/local_rag_tutorial_fastapi_ollama_pgvector/</link>
      <description><![CDATA[ 由   提交/u/Dev-it-with-me  [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1oavilf/local_rag_tutorial_fastapi_ollama_pgvector/</guid>
      <pubDate>Sun, 19 Oct 2025 17:27:13 GMT</pubDate>
    </item>
    <item>
      <title>Java 25 中的 6 个永久功能 - 另一个 Java LTS 版本，具有大量新功能：作用域值、模块导入、灵活的构造函数体等</title>
      <link>https://www.reddit.com/r/programming/comments/1oav40y/6_permanent_features_in_java_25_another_java_lts/</link>
      <description><![CDATA[ 由   提交/u/zarinfam  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1oav40y/6_permanent_features_in_java_25_another_java_lts/</guid>
      <pubDate>Sun, 19 Oct 2025 17:11:15 GMT</pubDate>
    </item>
    <item>
      <title>不要让互联网欺骗您，事件溯源很难</title>
      <link>https://www.reddit.com/r/programming/comments/1oav3h4/dont_let_the_internet_dupe_you_event_sourcing_is/</link>
      <description><![CDATA[ 由   提交/u/BrewedDoritos  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1oav3h4/dont_let_the_internet_dupe_you_event_sourcing_is/</guid>
      <pubDate>Sun, 19 Oct 2025 17:10:38 GMT</pubDate>
    </item>
    <item>
      <title>测试不可测试的东西</title>
      <link>https://www.reddit.com/r/programming/comments/1oau9sy/testing_the_untestable/</link>
      <description><![CDATA[ 由   提交/u/nfrankel  [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1oau9sy/testing_the_untestable/</guid>
      <pubDate>Sun, 19 Oct 2025 16:38:16 GMT</pubDate>
    </item>
    <item>
      <title>制作了一个存储库来收集和生成可能影响 LLM 中毒的错误技术信息 - 也可以用作反数据集。</title>
      <link>https://www.reddit.com/r/programming/comments/1oasnj6/made_a_repo_to_gather_and_generate_wrong_tech/</link>
      <description><![CDATA[ 由   提交/u/shamyel  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1oasnj6/made_a_repo_to_gather_and_generate_wrong_tech/</guid>
      <pubDate>Sun, 19 Oct 2025 15:34:40 GMT</pubDate>
    </item>
    <item>
      <title>程序员现在比以往任何时候都更需要机械同情心</title>
      <link>https://www.reddit.com/r/programming/comments/1oas1ru/programmers_now_more_than_ever_need_mechanical/</link>
      <description><![CDATA[ 由   提交/u/inelp  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1oas1ru/programmers_now_more_than_ever_need_mechanical/</guid>
      <pubDate>Sun, 19 Oct 2025 15:10:26 GMT</pubDate>
    </item>
    <item>
      <title>《毁灭公爵：零​​时任天堂 64 ROM 逆向工程项目达到 100% 反编译》</title>
      <link>https://www.reddit.com/r/programming/comments/1oarnkq/duke_nukem_zero_hour_nintendo_64_rom/</link>
      <description><![CDATA[ 由   提交 /u/r_retrohacking_mod2   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1oarnkq/duke_nukem_zero_hour_nintendo_64_rom/</guid>
      <pubDate>Sun, 19 Oct 2025 14:54:23 GMT</pubDate>
    </item>
    <item>
      <title>用于现代内存安全的 C 和 C++ 预处理器</title>
      <link>https://www.reddit.com/r/programming/comments/1oaqwov/c_and_c_preprocessor_for_modern_memory_safety/</link>
      <description><![CDATA[Cdefer 用于 C 和 C 语言的下一代内存安全预处理器C++。 将现代内存安全和零配置构建引入经典 C 和 C++。 C++。   由   提交/u/krishnatorque  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1oaqwov/c_and_c_preprocessor_for_modern_memory_safety/</guid>
      <pubDate>Sun, 19 Oct 2025 14:23:13 GMT</pubDate>
    </item>
    </channel>
</rss>