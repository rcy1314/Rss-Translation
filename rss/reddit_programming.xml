<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：编程</title>
    <link>https://www.reddit.com/r/programming/new</link>
    <description>计算机编程</description>
    <lastBuildDate>Mon, 27 Oct 2025 15:27:06 GMT</lastBuildDate>
    <item>
      <title>不可能的优化以及实现它的元编程</title>
      <link>https://www.reddit.com/r/programming/comments/1ohh2xu/the_impossible_optimization_and_the/</link>
      <description><![CDATA[ 由   提交 /u/verdagon   [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ohh2xu/the_impossible_optimization_and_the/</guid>
      <pubDate>Mon, 27 Oct 2025 15:13:31 GMT</pubDate>
    </item>
    <item>
      <title>Python 软件基金会撤回了美国政府资助计划的 150 万美元提案</title>
      <link>https://www.reddit.com/r/programming/comments/1ohgzl9/the_python_software_foundation_has_withdrawn_15/</link>
      <description><![CDATA[ 由   提交/u/N911999  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ohgzl9/the_python_software_foundation_has_withdrawn_15/</guid>
      <pubDate>Mon, 27 Oct 2025 15:10:03 GMT</pubDate>
    </item>
    <item>
      <title>综合数据库概念学习指南 - 面向软件开发人员的 Git Repo</title>
      <link>https://www.reddit.com/r/programming/comments/1ohghlt/comprehensive_database_concepts_learning_guide/</link>
      <description><![CDATA[嘿 r/programming 社区！ 👋 作为一名软件工程师，我整理了一个详细的 Git 存储库，作为数据库概念的实践学习指南。无论您是关系数据库的初学者还是处理分布式系统的高级开发人员，这个存储库都适合每个人。 存储库中有什么？本指南涵盖 10 个核心数据库主题，并提供深入的课程、可视化图表和实用代码示例，帮助您理解理论和应用。这是一个快速细分：数据库概念和数据库模型：关系型与 NoSQL、规范化、CAP 定理、多语言持久性。数据存储与访问：行存储与列存储、存储引擎（InnoDB、LSM 树）、预写日志记录。索引和查询优化：B-Tree、Hash、GiST 索引、查询执行计划、优化策略。交易与一致性：ACID 属性、隔离级别、MVCC、分布式事务。复制与复制高可用性：主从、同步与异步复制、故障转移策略。分片&amp;分区：水平分区与垂直分区、一致性哈希、重新分片。缓存和性能：缓存旁路、直写、多级缓存、缓存一致性。备份与备份恢复：完整/增量备份、时间点恢复、WAL。安全与合规性：RBAC、加密、行级安全性、GDPR 合规性。运营与工具：架构迁移、监控、零停机部署。   由   提交 /u/Claymonstre   [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ohghlt/comprehensive_database_concepts_learning_guide/</guid>
      <pubDate>Mon, 27 Oct 2025 14:51:33 GMT</pubDate>
    </item>
    <item>
      <title>人工智能可以编码，但不能构建软件</title>
      <link>https://www.reddit.com/r/programming/comments/1ohf259/ai_can_code_but_it_cant_build_software/</link>
      <description><![CDATA[ 由   提交 /u/Acrobatic-Fly-7324   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ohf259/ai_can_code_but_it_cant_build_software/</guid>
      <pubDate>Mon, 27 Oct 2025 13:55:15 GMT</pubDate>
    </item>
    <item>
      <title>构建更好的软件：为什么工作流程每次都能胜过代码 • Ben Smith 和 James Beswick</title>
      <link>https://www.reddit.com/r/programming/comments/1ohdzo0/building_better_software_why_workflows_beat_code/</link>
      <description><![CDATA[ 由   提交 /u/goto-con   [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ohdzo0/building_better_software_why_workflows_beat_code/</guid>
      <pubDate>Mon, 27 Oct 2025 13:10:26 GMT</pubDate>
    </item>
    <item>
      <title>构建智能对话流程：后端查询+动态用户数据收集</title>
      <link>https://www.reddit.com/r/programming/comments/1ohdpxl/building_a_smart_conversational_flow_backend/</link>
      <description><![CDATA[嗨，我正在为我的工作开发一些人工智能实现。到目前为止，这些实现都是 API 调用，用于处理客户端通过 WhatsApp 发送的消息。然而，现在我被要求做一些更“智能”的事情：实现一个信息流，其中用户从我的后端请求有关实体的信息，人工智能做出响应，同时它要求数据来预先注册该用户。 我想过用包含所有规则的大提示来做这件事，但我担心它可能太大。有什么想法吗？   由   提交/u/Difficult_Account739   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ohdpxl/building_a_smart_conversational_flow_backend/</guid>
      <pubDate>Mon, 27 Oct 2025 12:58:58 GMT</pubDate>
    </item>
    <item>
      <title>我们来做个游戏吧！ 346：技能和武器</title>
      <link>https://www.reddit.com/r/programming/comments/1ohdeli/lets_make_a_game_346_skills_and_weapons/</link>
      <description><![CDATA[ 由   提交/u/apeloverage  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ohdeli/lets_make_a_game_346_skills_and_weapons/</guid>
      <pubDate>Mon, 27 Oct 2025 12:44:59 GMT</pubDate>
    </item>
    <item>
      <title>身份验证（会话与 JWT）</title>
      <link>https://www.reddit.com/r/programming/comments/1ohd4b9/authentication_session_vs_jwt/</link>
      <description><![CDATA[ 由   提交/u/stmoreau  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ohd4b9/authentication_session_vs_jwt/</guid>
      <pubDate>Mon, 27 Oct 2025 12:31:49 GMT</pubDate>
    </item>
    <item>
      <title>Python 3.14 与 3.13 / 3.12 / 3.11 / 3.10 – 性能测试。总共对搭载 AMD Ryzen 7000 系列和第 13 代英特尔酷睿处理器的台式机、笔记本电脑或迷你电脑的计算机进行了 100 项各种基准测试。</title>
      <link>https://www.reddit.com/r/programming/comments/1ohaqg8/python_314_vs_313_312_311_310_performance_testing/</link>
      <description><![CDATA[ 由   提交/u/BestRef  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ohaqg8/python_314_vs_313_312_311_310_performance_testing/</guid>
      <pubDate>Mon, 27 Oct 2025 10:24:04 GMT</pubDate>
    </item>
    <item>
      <title>您的数据，他们的规则：在美国云中托管欧盟数据的风险越来越大</title>
      <link>https://www.reddit.com/r/programming/comments/1ohapof/your_data_their_rules_the_growing_risks_of/</link>
      <description><![CDATA[ 由   提交/u/danielrothmann   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ohapof/your_data_their_rules_the_growing_risks_of/</guid>
      <pubDate>Mon, 27 Oct 2025 10:22:42 GMT</pubDate>
    </item>
    <item>
      <title>极快的数据压缩库</title>
      <link>https://www.reddit.com/r/programming/comments/1oha4zd/extremely_fast_data_compression_library/</link>
      <description><![CDATA[我需要一个压缩库来实现快速内存压缩，但没有一个足够快。所以我必须创建自己的：memlz 它在压缩和解压缩速度上都比 LZ4 好几倍，但当然压缩比更差。   由   提交/u/South_Acadia_6368   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1oha4zd/extremely_fast_data_compression_library/</guid>
      <pubDate>Mon, 27 Oct 2025 09:46:09 GMT</pubDate>
    </item>
    <item>
      <title>具有可验证共享的 Shamir 秘密共享的轻量级 Python 实现</title>
      <link>https://www.reddit.com/r/programming/comments/1oh944a/lightweight_python_implementation_of_shamirs/</link>
      <description><![CDATA[嗨/编程！ 我为 Shamir 的秘密共享 (SSS) 构建了一个轻量级 Python 库，它将秘密（如密钥）分割成多个共享，只需要一个阈值即可重建。它还支持 Feldman 的可验证秘密共享，以安全地检查共享有效性。 我的项目的用途 基本上，您有一个秘密（密码、密钥、访问令牌、API 令牌、加密钱包密码、秘密公式/配方、核导弹代码）。您可以将您的秘密分享给您的朋友、同事、合作伙伴等，并且要重建您的秘密，您将需要至少 k 份。例如：总共 5 份，但您至少需要 3 份才能恢复秘密）。拥有少于 k 个份额的冒名顶替者对秘密一无所知（对于上下文，如果他拥有 3 个份额中的 2 个，即使具有无限的计算能力，他也无法恢复秘密 - 除非他利用离散对数问题，但这对于当前计算机来说是不可行的）。如果你愿意，你可以不使用这个 Feldman 方案（验证共享），这样即使有无限的计算能力，即使有无限的量子计算机，你的秘密也是安全的 - 从数学上讲，少于 k 个共享是不可能恢复秘密的 特点：  最小的 deps (pycryptodome)，纯 Python。 基于文件或变量 具有 Base64 共享的工作流程。 用于分割、验证和恢复秘密的简单 API。 MIT 许可，非常适合安全密钥管理或学习加密。  与其他实现的比较：  pycryptodome - 它只允许分割 16 个字节，而我的允许无限分割（只要你愿意） 等待，因为所有内容都是在本地计算机上计算的）。此外，此实现没有此功能，您可以在其中验证共享的有效性。另外，这会返回原始字节数组，其中我的返回base64（更容易传输/发送） 此存储库允许您共享您的秘密，但它应该已经采用数字格式，我的会自动将您的秘密转换为数字。此外，此存储库要求您将共享作为原始坐标，我认为这太技术性了。 其他说明：我的项目允许您使用变量或文件恢复您的秘密。它实施费尔德曼方案来验证您的份额。它以方便的格式存储共享 base64 等等，请查看文档  目标受众 我想说它已经做好了生产准备，因为它涵盖了所有安全措施：至少 1024 位的离散对数问题的质数、完美的保密性等等。 即便如此，我也不建议将其用于高机密数据（例如核导弹的代码），除非有专家确认其安全 检查一下：  PyPI：https://pypi.org/project/shamir-lbodlev/（pip install shamir-lbodlev） GitHub：https://github.com/lbodlev888/shamir（带示例的自述文件）  -反馈或功能想法？让我知道这里！   由   提交/u/Excellent_Double_726   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1oh944a/lightweight_python_implementation_of_shamirs/</guid>
      <pubDate>Mon, 27 Oct 2025 08:37:55 GMT</pubDate>
    </item>
    <item>
      <title>OpenAI Atlas“代理模式”刚刚使 ARIA 标签成为您路线图上最重要的事情</title>
      <link>https://www.reddit.com/r/programming/comments/1oh8lug/openai_atlas_agent_mode_just_made_aria_tags_the/</link>
      <description><![CDATA[我一直在分析新的 OpenAI Atlas 浏览器，大多数人都忽略了开发人员最大的收获。 因此，我花了时间深入研究我正在撰写的一篇文章的技术架构，而现实要复杂得多。这不是浏览器；而是浏览器。这是一个代理平台。 &lt;一 href=&quot;https://medium.com/ai-advances/openai-atlas-beyond-the-browser-window-unpacking-agentic-web-ai-memories-the-future-of-7a1900fe0999?sk=f86d5cadb904bb8aae15458cfcc71e72&quot;&gt;文章 重要的两件事是：  “浏览器记忆”：这是一项可选功能，可以为您所看到的内容构建个人的、可查询的知识图谱。你可以问它，“找到我上周读过的关于 Python 的那篇文章，总结一下要点。”这是人工智能的持久、长期记忆。 “代理模式”：这是既令人惊奇又令人恐惧的部分。它是一个人工智能，可以代表您实际点击按钮并填写表格。这不是一个愚蠢的脚本；它是一个简单的脚本。它使用 LLM 来理解页面的意图。  最疯狂的部分是安全性。 OpenAI 公开承认这很容易受到“间接提示注入”的影响。 （即隐藏在您的代理读取的网页上的恶意提示）。 我们都知道“代理模式”。该功能可让人工智能自动导航网站、填写表格和单击按钮。但是如何知道要点击什么？这不仅仅是使用脆弱的选择器。它使用 LLM 在语义上理解 DOM。给它明确指示的最佳方法是什么？ ARIA 标签。 您将那个  设置为看起来像一个按钮吗？代理可能会感到困惑。但是&lt;按钮 aria-label=“提交付款”&gt;？这是一个直接的、机器可读的指令。 可访问性一直很重要，但我认为它现在对于“Agent-SEO”来说是关键任务。我们即将看到一个为 AI 代理优化站点的全新学科，它从正确的语义 HTML 和 ARIA 开始。 我就此编写了更深入的指南，包括这一切引入的巨大安全缺陷（间接提示注入）。如果您为网络进行构建，这将会影响您。 链接   由   提交 /u/Paper-Superb   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1oh8lug/openai_atlas_agent_mode_just_made_aria_tags_the/</guid>
      <pubDate>Mon, 27 Oct 2025 08:02:38 GMT</pubDate>
    </item>
    <item>
      <title>GlobalCVE — 面向开发人员和安全工具的统一 CVE 源</title>
      <link>https://www.reddit.com/r/programming/comments/1oh4ge4/globalcve_unified_cve_feed_for_developers/</link>
      <description><![CDATA[对于构建或维护安全感知软件的开发人员来说，GlobalCVE.xyz 将来自多个全球来源（NVD、MITRE、CNNVD 等）的 CVE 数据聚合到一个干净的源中。 它是开源的 GitHub.com/GlobalCVE 、API 就绪，旨在减少漏洞跟踪  如果您将 CVE 检查集成到 CI/CD、编写扫描程序或只是想要更好的可见性，则非常有用。   由   提交/u/reallylonguserthing  [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1oh4ge4/globalcve_unified_cve_feed_for_developers/</guid>
      <pubDate>Mon, 27 Oct 2025 03:41:20 GMT</pubDate>
    </item>
    <item>
      <title>可执行格式（ELF、Mach-O、PE）</title>
      <link>https://www.reddit.com/r/programming/comments/1oh0o2l/executable_formats_elf_macho_pe/</link>
      <description><![CDATA[ 由   提交/u/Helpful_Geographer430   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1oh0o2l/executable_formats_elf_macho_pe/</guid>
      <pubDate>Mon, 27 Oct 2025 00:33:57 GMT</pubDate>
    </item>
    </channel>
</rss>