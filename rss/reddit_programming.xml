<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：编程</title>
    <link>https://www.reddit.com/r/programming/new</link>
    <description>计算机编程</description>
    <lastBuildDate>Sun, 19 Oct 2025 06:34:15 GMT</lastBuildDate>
    <item>
      <title>Sandy Metz 谈软件设计中小对象的力量</title>
      <link>https://www.reddit.com/r/programming/comments/1oaf08c/sandy_metz_on_the_power_of_small_objects_in/</link>
      <description><![CDATA[ 由   提交/u/South-Reception-1251   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1oaf08c/sandy_metz_on_the_power_of_small_objects_in/</guid>
      <pubDate>Sun, 19 Oct 2025 03:04:39 GMT</pubDate>
    </item>
    <item>
      <title>Flowgramming——读起来像句子的程序</title>
      <link>https://www.reddit.com/r/programming/comments/1oadlfh/flowgramming_programs_that_read_like_sentences/</link>
      <description><![CDATA[大多数编程语言首先是为机器构建的，其次是为人类构建的。 Flowgramming 颠覆了这一点。 这是一个开源项目，旨在设计一个模块化、基于流程的编程环境，其中逻辑读起来就像自然语言一样。 您无需编写语法，而是描述应该发生的情况 - FlowOS 通过以下方式构建逻辑： 模块化、可审核的组件，称为 FlowBlocks。 例如，这是有效的 FlowScript： action:intent:“sort_list”输入：“数据块：numbers.raw”输出：“DataBlock：numbers.sorted”标签：[low_memory，auditable]  该行的含义是：   Flowgramming 处理剩下的事情 — 选择最佳的 ActionBlock，执行内存和安全规则，并记录整个过程以进行审核。 完整的系统包括：  FlowDirector — 运行时和调度程序 ActionSystem - 模块化、独立的逻辑单元 CommSystem - 受控通信块 DataSystem - 可信数据处理和版本控制 FlowGuard  - 内置信任和安全实施 FlowLog — 透明的可观察性和审计跟踪  它已获得 MPL 2.0 许可，因此它保持开放性，但可以灵活地供研究或企业使用。 该文档每周都会扩展 — 非常欢迎早期贡献者。 GitHub 存储库：https://github.com/donsauber/FlowOS 如果您感兴趣：  声明式系统设计 基于流程的编程 模块化运行时架构 或真正编写代码 人类可读  …来看看，留下一个星星，或者加入“讨论”选项卡。 Flowgramming 还处于早期阶段 - 但目标很简单： 让编程成为你可以阅读、解释和信任的东西。   由   提交/u/IllustriousAd6785   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1oadlfh/flowgramming_programs_that_read_like_sentences/</guid>
      <pubDate>Sun, 19 Oct 2025 01:51:20 GMT</pubDate>
    </item>
    <item>
      <title>预测 2027 年科技行业会是什么样子</title>
      <link>https://www.reddit.com/r/programming/comments/1oabk38/prediction_of_what_tech_industry_in_2027_could/</link>
      <description><![CDATA[预测 2027 年科技行业会是什么样子。找到了这个 2027 年就业行业的模拟   由   提交/u/Exact_Log_3354   [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1oabk38/prediction_of_what_tech_industry_in_2027_could/</guid>
      <pubDate>Sun, 19 Oct 2025 00:08:49 GMT</pubDate>
    </item>
    <item>
      <title>我们来做个游戏吧！ 341：电锯</title>
      <link>https://www.reddit.com/r/programming/comments/1oa69z4/lets_make_a_game_341_chainsaws/</link>
      <description><![CDATA[ 由   提交/u/apeloverage  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1oa69z4/lets_make_a_game_341_chainsaws/</guid>
      <pubDate>Sat, 18 Oct 2025 20:22:37 GMT</pubDate>
    </item>
    <item>
      <title>《遗忘》将在两周内中断</title>
      <link>https://www.reddit.com/r/programming/comments/1oa4mhj/oblivion_breaks_in_a_fortnight/</link>
      <description><![CDATA[ 由   提交/u/BlueGoliath  [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1oa4mhj/oblivion_breaks_in_a_fortnight/</guid>
      <pubDate>Sat, 18 Oct 2025 19:18:04 GMT</pubDate>
    </item>
    <item>
      <title>两次设计并相信你所做的事情</title>
      <link>https://www.reddit.com/r/programming/comments/1o9yo18/design_twice_and_trust_in_what_you_do/</link>
      <description><![CDATA[ 由   提交 /u/Exact_Prior6299   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1o9yo18/design_twice_and_trust_in_what_you_do/</guid>
      <pubDate>Sat, 18 Oct 2025 15:23:44 GMT</pubDate>
    </item>
    <item>
      <title>您应该避免的 SQL 反模式</title>
      <link>https://www.reddit.com/r/programming/comments/1o9ylkg/sql_antipatterns_you_should_avoid/</link>
      <description><![CDATA[ 由   提交/u/BrewedDoritos  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1o9ylkg/sql_antipatterns_you_should_avoid/</guid>
      <pubDate>Sat, 18 Oct 2025 15:20:59 GMT</pubDate>
    </item>
    <item>
      <title>规范驱动的人工智能工具包</title>
      <link>https://www.reddit.com/r/programming/comments/1o9yivq/specdriven_ai_toolkit/</link>
      <description><![CDATA[GitHub 提供的一种新方法，可利用 AI 和代理工具通过 Spec Kit（开源）更智能地完成您的工作，将需求转化为可操作的蓝图，简化开发并提高团队的代码质量。   由   提交 /u/abdelrhman-arnos   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1o9yivq/specdriven_ai_toolkit/</guid>
      <pubDate>Sat, 18 Oct 2025 15:18:08 GMT</pubDate>
    </item>
    <item>
      <title>比尔·盖茨的第一个商业代码 (Altair BASIC) 的幕后样子</title>
      <link>https://www.reddit.com/r/programming/comments/1o9wk8x/what_bill_gates_first_commercial_code_altair/</link>
      <description><![CDATA[ 由   提交/u/Outsource_Problems   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1o9wk8x/what_bill_gates_first_commercial_code_altair/</guid>
      <pubDate>Sat, 18 Oct 2025 13:59:16 GMT</pubDate>
    </item>
    <item>
      <title>作为软件开发人员应遵循的编码最佳实践</title>
      <link>https://www.reddit.com/r/programming/comments/1o9voh7/coding_best_practices_you_should_follow_as_a/</link>
      <description><![CDATA[大家好！ 👋 我一直在学习更多有关干净代码实践的知识，并且最近深入研究了单一职责原则 (SRP)。这是一开始听起来很简单，但可以完全改变您构造类和函数的方式的事情之一。 我写了一篇 Medium 文章，通过示例和一些关于如何避免“意大利面条代码”感觉的实用技巧对其进行了详细分析：  https://medium.com/@harshalgadhe/the-single-responsibility-principle-srp-explained-why-your-code-still-stinks-and-how-to-fix-it-3193c88722ab 我很想听听您的想法，如果您有任何关于 SRP 如何帮助您完成项目的提示或示例，我洗耳恭听！ 祝您编码愉快！ 🚀   由   提交/u/Feeling_Lettuce7476   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1o9voh7/coding_best_practices_you_should_follow_as_a/</guid>
      <pubDate>Sat, 18 Oct 2025 13:22:09 GMT</pubDate>
    </item>
    <item>
      <title>Rust 依赖生态系统的状态</title>
      <link>https://www.reddit.com/r/programming/comments/1o9rgso/the_state_of_the_rust_dependency_ecosystem/</link>
      <description><![CDATA[ 由   提交/u/fittyscan  [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1o9rgso/the_state_of_the_rust_dependency_ecosystem/</guid>
      <pubDate>Sat, 18 Oct 2025 09:37:06 GMT</pubDate>
    </item>
    <item>
      <title>Blinter The Linter - 跨平台批处理脚本 Linter</title>
      <link>https://www.reddit.com/r/programming/comments/1o9qp1x/blinter_the_linter_a_cross_platform_batch_script/</link>
      <description><![CDATA[是的，现在是 2025 年了。是的，人们仍在编写批处理脚本。不，它们不应该崩溃。 它的作用 ✅ 158 条规则，涵盖错误/警告/样式/安全/性能 ✅ 捕获令人讨厌的东西：命令注入、路径遍历、不安全的临时文件 ✅ 处理奇怪的东西：变量扩展、FOR 循环、 多级转义 ✅ 10MB+文件？没问题。 Unicode？明白了。 线程安全？始终。 立即获取 bash pip install Blinter  或者从 GitHub 版本 获取独立的 .exe 一个命令 bash python -m blinter script.bat  就是这样。无需配置。没有仪式。只需将其指向您的 .bat 或 .cmd 文件即可。  第一个用于 Windows 批处理文件的专业级 linter。 因为您的自动化脚本不应该用胶带粘在一起。 📦 PyPI • ⚙️ GitHub   由   提交/u/Ok_Bottle8789   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1o9qp1x/blinter_the_linter_a_cross_platform_batch_script/</guid>
      <pubDate>Sat, 18 Oct 2025 08:47:08 GMT</pubDate>
    </item>
    <item>
      <title>基础设施即代码 • Kief Morris 和 Abby Bangser</title>
      <link>https://www.reddit.com/r/programming/comments/1o9qahj/infrastructure_as_code_kief_morris_abby_bangser/</link>
      <description><![CDATA[ 由   提交 /u/goto-con   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1o9qahj/infrastructure_as_code_kief_morris_abby_bangser/</guid>
      <pubDate>Sat, 18 Oct 2025 08:20:57 GMT</pubDate>
    </item>
    <item>
      <title>用约 500 行 C++ 代码构建轻量级 ImGui 分析器</title>
      <link>https://www.reddit.com/r/programming/comments/1o9h0j0/building_a_lightweight_imgui_profiler_in_500/</link>
      <description><![CDATA[ 由   提交/u/SuperV1234  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1o9h0j0/building_a_lightweight_imgui_profiler_in_500/</guid>
      <pubDate>Fri, 17 Oct 2025 23:50:47 GMT</pubDate>
    </item>
    <item>
      <title>Vibe 编码的兴衰：AI Slop 的现实</title>
      <link>https://www.reddit.com/r/programming/comments/1o9gxj3/the_rise_and_fall_of_vibe_coding_the_reality_of/</link>
      <description><![CDATA[ 由   提交/u/BlueGoliath  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1o9gxj3/the_rise_and_fall_of_vibe_coding_the_reality_of/</guid>
      <pubDate>Fri, 17 Oct 2025 23:46:55 GMT</pubDate>
    </item>
    </channel>
</rss>