<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：编程</title>
    <link>https://www.reddit.com/r/programming/new</link>
    <description>计算机编程</description>
    <lastBuildDate>Mon, 20 Oct 2025 12:50:10 GMT</lastBuildDate>
    <item>
      <title>最后的 StaffPlus NYC：当角色超出其空间时</title>
      <link>https://www.reddit.com/r/programming/comments/1obhl5s/the_last_staffplus_nyc_when_the_role_outgrew_its/</link>
      <description><![CDATA[ 由   提交 /u/bezomaxo   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1obhl5s/the_last_staffplus_nyc_when_the_role_outgrew_its/</guid>
      <pubDate>Mon, 20 Oct 2025 12:22:42 GMT</pubDate>
    </item>
    <item>
      <title>整体工程：有机问题解决 • Vanessa Formicola 和 Andrew Harmel-Law</title>
      <link>https://www.reddit.com/r/programming/comments/1obhh7y/holistic_engineering_organic_problem_solving/</link>
      <description><![CDATA[ 由   提交 /u/goto-con   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1obhh7y/holistic_engineering_organic_problem_solving/</guid>
      <pubDate>Mon, 20 Oct 2025 12:17:29 GMT</pubDate>
    </item>
    <item>
      <title>一个寻找人工智能指令并投票的网站</title>
      <link>https://www.reddit.com/r/programming/comments/1obhh2o/a_website_to_find_and_vote_for_ai_instructions/</link>
      <description><![CDATA[嘿， 所以我一直看到分散在随机线程中的令人惊叹的指令文件，但没有集中位置来发现它们。 本周我构建并发布了 Codexhaus，一个免费的排行榜，人们可以在其中共享、投票和发现最佳指令文件。 希望你会喜欢，它在 ProductHuint 上上线，所以点个赞吧 非常友善，当然您的反馈会对我有很大帮助！ codexhaus.com   由   提交/u/MyBeautifulFlight77  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1obhh2o/a_website_to_find_and_vote_for_ai_instructions/</guid>
      <pubDate>Mon, 20 Oct 2025 12:17:18 GMT</pubDate>
    </item>
    <item>
      <title>部分流：联合查询引擎中的实时结果</title>
      <link>https://www.reddit.com/r/programming/comments/1obhg2t/partial_streams_realtime_results_in_a_federated/</link>
      <description><![CDATA[ 由   提交/u/TonTinTon   [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1obhg2t/partial_streams_realtime_results_in_a_federated/</guid>
      <pubDate>Mon, 20 Oct 2025 12:15:54 GMT</pubDate>
    </item>
    <item>
      <title>作为一名软件工程师，我从 8 年的艰苦经历中学到的 8 条教训</title>
      <link>https://www.reddit.com/r/programming/comments/1obh3t2/8_lessons_i_learned_the_hard_way_from_8_years_as/</link>
      <description><![CDATA[ 由   提交/u/thehuslingengineer  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1obh3t2/8_lessons_i_learned_the_hard_way_from_8_years_as/</guid>
      <pubDate>Mon, 20 Oct 2025 11:58:58 GMT</pubDate>
    </item>
    <item>
      <title>当 if 只是一个函数时</title>
      <link>https://www.reddit.com/r/programming/comments/1obh3ex/when_if_is_just_a_function/</link>
      <description><![CDATA[ 由   提交/u/middayc   [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1obh3ex/when_if_is_just_a_function/</guid>
      <pubDate>Mon, 20 Oct 2025 11:58:23 GMT</pubDate>
    </item>
    <item>
      <title>为什么 Elm 是 React 开发人员学习真正函数式编程的最佳方式</title>
      <link>https://www.reddit.com/r/programming/comments/1obh0br/why_elm_is_the_best_way_for_react_developers_to/</link>
      <description><![CDATA[ 由   提交 /u/cekrem   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1obh0br/why_elm_is_the_best_way_for_react_developers_to/</guid>
      <pubDate>Mon, 20 Oct 2025 11:54:05 GMT</pubDate>
    </item>
    <item>
      <title>您必须了解的每种类型的 API</title>
      <link>https://www.reddit.com/r/programming/comments/1obgupp/every_type_of_api_you_must_know/</link>
      <description><![CDATA[ 由   提交/u/stmoreau  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1obgupp/every_type_of_api_you_must_know/</guid>
      <pubDate>Mon, 20 Oct 2025 11:46:00 GMT</pubDate>
    </item>
    <item>
      <title>为什么 BPMN 引擎这么慢？</title>
      <link>https://www.reddit.com/r/programming/comments/1obfn3a/why_are_bpmn_engines_so_slow/</link>
      <description><![CDATA[我是 BPMN 处理的新手，正在研究业务流程执行/编排引擎，例如 Activity 或 Camunda。为了了解每小时可以运行多少个进程，我访问了此（Camunda，调整环境大小）页面。  简而言之，它表示一台具有 11 个 vCPU、22GB RAM、192 GB 磁盘的机器。每秒可以执行 5 个进程，换算成每分钟 300 个进程，换算成 8 小时内 144k 个进程。 他们还假设，一个进程由 av 组成。 10个任务，最后“存储75k个流程实例”每天。这 75k 大约是执行的 144k 进程的一半，这意味着一半是只读进程。 当我将其转换为数据库基准测试时，TPC-C，其中 5 个“进程”是只读进程。定义：它们称为交易，定义了 5 个交易：新订单、付款、订单状态、交货和库存水平。每分钟交易 TPC-C 结果中仅包含五分之一的交易类型（占总数的 44%）。  这个 TPC-C 基准测试是 Web/微服务炒作之前的性能标准。看看 TPC-C 列表，即使是 24 年前最古老的条目，单个 Pentium III 处理器，2 GB RAM，36 x 9.1GB SCSI 驱动器完整规格（这是状态 2001 年的技术）每分钟可完成 9347 个完全并发的 ACID 事务。对比。具有 11 个 vCPU、22 GB RAM 的 BPMN 引擎，只有 300？ 我找不到 BPMN 基准，只有斯图加特大学的一些旧（2015）大学论文。  BPMN 真的那么慢吗？拥有 11 倍的 CPU，速度要慢 9347/300=31 倍？或者以每个 CPU 为基础，速度慢 341 倍。忽略24年前的Pentium无法与当前的AMD/Intel服务器CPU相匹配。如果我假设，由于更高的时钟、更宽更快的 RAM，当前的 CPU 速度快了 3 倍，我们可以说 BPMN 处理速度慢了 1000 倍。  几年前，我遇到了一家公司，该公司努力尝试使用自己的引擎/业务流程编排来实现 BPMN 工作流程。他们在交易速度、稳定性等方面存在巨大问题。他们告诉我，在租用其他 BPMN 解决方案之前，速度也那么慢。当时没有进一步跟进。  我在这里提到Camunda，只是因为我找到了上面的网站，讲的是什么资源需要什么。我猜想，这些信息对于所有 BPMN 引擎来说或多或少是相同的，例如 jBPM、Activity、SAP、IBM、ORACLE 等。  那么，为什么所有这些 BPMN 引擎都这么慢？因为都是Java写的？因为有“保存过程数据和状态”。是通过序列化巨大的 Java 对象来完成的吗？   由   提交 /u/HansDampfVN   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1obfn3a/why_are_bpmn_engines_so_slow/</guid>
      <pubDate>Mon, 20 Oct 2025 09:51:01 GMT</pubDate>
    </item>
    <item>
      <title>12：和弦进行和下降线</title>
      <link>https://www.reddit.com/r/programming/comments/1obf802/12_a_chord_progression_and_descending_line/</link>
      <description><![CDATA[ 由   提交/u/apeloverage  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1obf802/12_a_chord_progression_and_descending_line/</guid>
      <pubDate>Mon, 20 Oct 2025 09:09:25 GMT</pubDate>
    </item>
    <item>
      <title>GitHub 的开发者气候行动计划</title>
      <link>https://www.reddit.com/r/programming/comments/1obdyye/githubs_climate_action_plan_for_developers/</link>
      <description><![CDATA[作为开发人员采取切实的步骤来绿色化您的代码并绿色化地球。探索 GitHub 上超过 60,000 个绿色软件和气候相关的存储库。我们精心策划了工具和项目来帮助您启动气候行动之旅，并为实现净零碳排放做出贡献。   由   提交/u/augspurger  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1obdyye/githubs_climate_action_plan_for_developers/</guid>
      <pubDate>Mon, 20 Oct 2025 07:50:06 GMT</pubDate>
    </item>
    <item>
      <title>如何训练你的团队在不戏剧化的情况下说“我错了”</title>
      <link>https://www.reddit.com/r/programming/comments/1obd2j7/how_to_train_your_team_to_say_i_was_wrong_without/</link>
      <description><![CDATA[ 由   提交/u/dymissy  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1obd2j7/how_to_train_your_team_to_say_i_was_wrong_without/</guid>
      <pubDate>Mon, 20 Oct 2025 06:55:07 GMT</pubDate>
    </item>
    <item>
      <title>[文章] Gemini 支持的股票分析：解析金融新闻以实现自动交易决策</title>
      <link>https://www.reddit.com/r/programming/comments/1obcp2f/article_geminipowered_stock_analysis_parsing/</link>
      <description><![CDATA[我从我正在构建的一个较大的交易项目中提取了一小部分，并就此写了一篇短文。 本质上，我正在使用 Go 从意大利金融 RSS 提要中抓取文章。核心部分是将文本提供给Gemini (LLM)，并提供特定的提示，以获取结构化的 JSON 分析：股票代码 + 操作（买入/卖出/持有）+ 简要原因。 本文深入探讨：  从 Gemini 获得一致的 JSON 输出所需的确切多语言提示（低温、 严格格式）。 正确识别特定的意大利市场行情（例如 STLAM）。 Go 架构使用并发来管理流和分析请求。  它是用于自动化设置的工作组件。欢迎对此方法提出任何想法或反馈！ 文章链接： https://pgaleone.eu/golang/vertexai/trading/2025/10/20/gemini-powered-stock-analysis-news-feeds/   由   提交/u/pgaleone  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1obcp2f/article_geminipowered_stock_analysis_parsing/</guid>
      <pubDate>Mon, 20 Oct 2025 06:31:22 GMT</pubDate>
    </item>
    <item>
      <title>构建实时处理的分布式日志查询引擎</title>
      <link>https://www.reddit.com/r/programming/comments/1ob9jlr/building_a_distributed_log_query_engine_with/</link>
      <description><![CDATA[   分布式日志查询 API：具有高级过滤、聚合和实时搜索功能的 RESTful 服务 事件驱动的处理管道：基于 Kafka 的系统每秒处理 10K+ 日志，并保证交付 智能缓存层：Redis 支持的查询优化将响应时间从 2 秒缩短至 50 毫秒 生产监控堆栈：通过 Prometheus 指标、Grafana 仪表板和分布式跟踪实现完整的可观察性    由   提交/u/Extra_Ear_10   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ob9jlr/building_a_distributed_log_query_engine_with/</guid>
      <pubDate>Mon, 20 Oct 2025 03:33:44 GMT</pubDate>
    </item>
    <item>
      <title>科技行业内大多数人对人工智能的看法</title>
      <link>https://www.reddit.com/r/programming/comments/1ob2uvl/the_majority_ai_view_within_the_tech_industry/</link>
      <description><![CDATA[ 由   提交/u/mareek  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ob2uvl/the_majority_ai_view_within_the_tech_industry/</guid>
      <pubDate>Sun, 19 Oct 2025 22:16:11 GMT</pubDate>
    </item>
    </channel>
</rss>