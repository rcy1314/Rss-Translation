<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：开源</title>
    <link>https://www.reddit.com/r/opensource/new</link>
    <description>与开源相关的所有内容的 Reddit 子版块（对于此上下文，我们在此不再定义开源的定义 http://en.wikipedia.org/wiki/Open_source）</description>
    <lastBuildDate>Tue, 21 Oct 2025 15:26:49 GMT</lastBuildDate>
    <item>
      <title>BusKill 获得 FUTO 的 1,031 美元小额赠款</title>
      <link>https://www.reddit.com/r/opensource/comments/1ocfu0t/buskill_wins_1031_microgrant_from_futo/</link>
      <description><![CDATA[       由   提交/u/maltfield  [链接] [评论] ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1ocfu0t/buskill_wins_1031_microgrant_from_futo/</guid>
      <pubDate>Tue, 21 Oct 2025 15:21:22 GMT</pubDate>
    </item>
    <item>
      <title>厌倦了记住 PyInstaller 标志？我构建了 Py2Exe，一个现代的 FOSS GUI，使打包 Python 应用程序变得简单</title>
      <link>https://www.reddit.com/r/opensource/comments/1ocez8o/tired_of_memorizing_pyinstaller_flags_i_built/</link>
      <description><![CDATA[嘿， 像你们中的许多人一样，我经常使用 PyInstaller 来打包我的 Python 项目。这是一个非常强大的工具，但我总是发现自己在深入研究文档来记住添加图标、捆绑数据文件或管理隐藏导入的特定命令行参数。 为了解决自己的问题，我决定为其构建一个现代、直观且功能丰富的 GUI 前端。我很高兴今天与大家分享结果：Py2Exe。 它是用 PySide6 构建的，在 MIT 许可证下完全开源，可供您尝试。 目标是在一个易于导航的界面中展示 PyInstaller 的所有功能，而不牺牲功能。 主要功能：  ✨ 直观的选项卡式 UI： 所有选项都清晰地分为“基本”、“高级”和“包管理”选项卡。不再需要寻找正确的旗帜。 🌗 Light &amp;深色主题：自动与您的系统主题同步，或者您可以手动切换。标题栏也以 Windows 为主题！ 📄 实时构建日志： 通过并排日志面板准确查看 PyInstaller 正在执行的操作，并提供错误、警告和成功消息的语法突出显示。 ⚙️ 综合选项： 访问您需要的一切： 单文件与单目录 捆绑 窗口应用程序与控制台应用程序 自定义图标支持（.ico） 轻松管理数据文件和隐藏导入 控制构建/分发路径、UPX 压缩等。  ✅ 稳定且易于使用。健壮： UI 具有固定布局，可防止奇怪的调整大小问题，并提供一致的体验。  在 GitHub 上查看： https://github.com/dovvnloading/Py2Exe 该项目是使用 Python 3.8+ 和 PySide6 构建的。有关如何启动和运行它的说明都在自述文件中。 这是一个构建起来很有趣的项目，我希望它对社区中的一些人有用。我很想听听您的任何反馈！欢迎错误报告、功能建议和拉取请求。 感谢您查看！ TL;DR: 我为 PyInstaller 构建了一个免费的开源 GUI，无需命令行即可将 Python 脚本转换为可执行文件。它有一个干净的用户界面、浅色/深色主题、实时日志，并公开了大量的 PyInstaller 选项。链接到上面的存储库。   由   提交 /u/Ok-Function-7101   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1ocez8o/tired_of_memorizing_pyinstaller_flags_i_built/</guid>
      <pubDate>Tue, 21 Oct 2025 14:48:28 GMT</pubDate>
    </item>
    <item>
      <title>我构建并开源了第一个 Canvas MCP 客户端！</title>
      <link>https://www.reddit.com/r/opensource/comments/1ocei9s/i_built_and_opensourced_the_very_first_canvas_mcp/</link>
      <description><![CDATA[聊天 UI 很糟糕。因此，我为 AI 构建了一个 Canvas。 与 MCP 相结合，您的 AI 将更上一层楼。 这是一个无限的可视化工作空间，可供您日常使用 AI 和人工智能。 MCP 工具。 想想 Figma，但用于 AI 协作。 该项目现已在 Github 上上线 👉 https://github.com/n00bvn/CanvasMCPClient 我很乐意听到来自的反馈 你们大家。非常感谢！   由   提交/u/charlottes9778  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1ocei9s/i_built_and_opensourced_the_very_first_canvas_mcp/</guid>
      <pubDate>Tue, 21 Oct 2025 14:30:04 GMT</pubDate>
    </item>
    <item>
      <title>htmask.js — 无人问津的 JavaScript 屏蔽库</title>
      <link>https://www.reddit.com/r/opensource/comments/1ocd5ct/htmaskjs_the_javascript_masking_library_nobody/</link>
      <description><![CDATA[这是什么垃圾？ htmask.js 是我的无聊项目，变成了“图书馆”。它屏蔽了输入字段，因为我没有更好的事情可做，并且我的所有输入都被取消屏蔽。 它 100% 无依赖，经过 0% 测试，并且可能有效。 如何“使用”它  添加脚本  &lt;脚本 src=“htmask.js”&gt;&lt;/script&gt; 就是这样。您已经完成了超出此项目应有的设置。  设置掩码属性  &lt;输入掩码=“(00) 00000-0000”&gt; &lt;输入掩码＝“00/00/0000”&gt; &lt;输入掩码=“AAA-0000”&gt; 0 = 数字。 A = 字母。其他一切=祝你好运。  看着它“工作”当你打字时，它会给你最好的专业输入掩码库的印象。有时它甚至会成功。  为什么使用这个？ 你不应该。但是，如果您讨厌依赖关系，喜欢混乱，或者只是想看到输入字段受到影响，那么这就是为您准备的。 它甚至可以与 htmx 配合使用，老实说，这超出了我的预期。 TL;DR 未格式化的输入很难看。这个图书馆也是。 👉 github.com/DaviTostes/htmask   由   提交/u/DTostes  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1ocd5ct/htmaskjs_the_javascript_masking_library_nobody/</guid>
      <pubDate>Tue, 21 Oct 2025 13:35:48 GMT</pubDate>
    </item>
    <item>
      <title>[工具] MikroTik RouterOS 安全检查器</title>
      <link>https://www.reddit.com/r/opensource/comments/1occtj3/tool_mikrotik_routeros_security_inspector/</link>
      <description><![CDATA[      RouterOS 配置分析器，用于通过 CVE 搜索功能查找安全错误配置   由   提交/u/caster0x00  [链接] [评论] ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1occtj3/tool_mikrotik_routeros_security_inspector/</guid>
      <pubDate>Tue, 21 Oct 2025 13:22:21 GMT</pubDate>
    </item>
    <item>
      <title>Localsend - 喜欢它！</title>
      <link>https://www.reddit.com/r/opensource/comments/1ocbbcq/localsend_loving_it/</link>
      <description><![CDATA[不确定它是否适合这里，但它确实使我不必使用在线服务。 Localsend 是我经常使用的最好的应用程序之一。喜欢它。 谢谢开发人员！   由   提交 /u/primipare   [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1ocbbcq/localsend_loving_it/</guid>
      <pubDate>Tue, 21 Oct 2025 12:15:34 GMT</pubDate>
    </item>
    <item>
      <title>为什么 MIT 许可证被 FSF 视为免费</title>
      <link>https://www.reddit.com/r/opensource/comments/1oca0uw/why_is_the_mit_license_considered_free_by_the_fsf/</link>
      <description><![CDATA[我在 MIT 许可证中没有看到任何需要维护 Freedom 1（研究和更改代码）的内容。注意我说的是原著。显然，作为许可许可，我理解衍生作品不需要免费。 MIT 许可为最终用户提供了以下权利：  使用、复制、修改、合并、发布、分发、再许可和/或出售软件的副本  我没有看到任何内容表明它必须包含人类可读的源代码或不包含专有的 斑点。是否“修改”？也许涵盖这一点？ 我想在我的 GPLv3 许可作品中使用 MIT 许可的库，但想确保是否所有 MIT 许可的作品（经过适当审查）都可以包含在内，或者是否存在非自由 MIT 许可的作品的可能性。    由   提交/u/E_coli42  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1oca0uw/why_is_the_mit_license_considered_free_by_the_fsf/</guid>
      <pubDate>Tue, 21 Oct 2025 11:08:24 GMT</pubDate>
    </item>
    <item>
      <title>AMA：我们为每个项目提供高达 158.000 欧元的免费开源软件资助！</title>
      <link>https://www.reddit.com/r/opensource/comments/1oc9tjn/ama_we_fund_free_open_source_software_with_up_to/</link>
      <description><![CDATA[我们是来自 Prototype Fund 的 Marie-Lena 和 Paul，我们的主要目标是通过资助开源开发者和小型团队来支持开源社区。有任何问题都可以向我们询问！ 我们为每个项目提供高达 158.000 欧元的资金以及辅导、网络和咨询服务。我们的目标是资助开源领域的新想法，并为他们提供达到原型状态所需的资源 - 因此得名。我们专门资助符合公共利益的软件项目，这些项目作为开源软件可免费使用、可持续访问和可定制。 由于开发人员希望编码而不是深入官僚机构，因此我们努力成为一个低门槛的资助计划。因此，我们的申请流程尽可能简单：您只需回答大约 15 个问题。但即使是最简单的过程仍然会引发一些问题，因此请随时提出任何问题。 我们自 2016 年以来一直在资助开源项目，迄今为止已资助了 400 多个项目（您可以在我们的网站上找到它们，并在我们的 github）在路上，我们也了解了很多关于融资的总体知识，并进行了很多调整。作为一个由六人组成的团队，我们不断努力制定更好的资助计划。我们也喜欢回答所有这些问题！ 当然，我们总体上非常关心开源。因此，如果您想听听我们对更广泛问题的想法，请直接询问。 ------------------------------------------------------------------------- 我们都将通过我们的帐户 u/ptf_pr 进行回答。 我们无法评论或评判您的项目 想法 - 我们有一个评审团！我们只能评论它是否总体上符合我们的资助范围。 我们提前发布了此内容，以便您可以提出问题。我们将在欧洲中部夏令时间 (UTC+02:00) 下午 5 点至 6 点回复他们。您还可以对您希望首先得到解答的问题进行投票！  非常感谢模组让我们做到这一点！   由   提交/u/smi4lez  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1oc9tjn/ama_we_fund_free_open_source_software_with_up_to/</guid>
      <pubDate>Tue, 21 Oct 2025 10:57:36 GMT</pubDate>
    </item>
    <item>
      <title>开源游戏开发和许可</title>
      <link>https://www.reddit.com/r/opensource/comments/1oc9fnb/open_source_game_dev_licensing/</link>
      <description><![CDATA[你好！ 我已经独自开发一款游戏 2 年了，我一直想将它制作成 FOSS，因为这是一款关于黑客攻击和找回自由的游戏。 源代码一直在 github 上，但我对许可证一无所知，所以直到现在我才关心它。 然后我正在寻找一个正是我想要的许可证。想要 我不知道它是否存在。 我希望这样： - 源代码始终是公开的 - 任何人都可以使用、修改、分享它 - 任何人都可以在 steam 上购买游戏（不是那么昂贵），但你也可以在 github 上编译它（甚至免费下载） - 赚到的钱将在所有参与该游戏的开发者之间共享 该项目，基于他们的参与（你制作了游戏的 50% -&gt; 你赚了 50% 的钱）  - 任何人都可以分叉代码并修改和出售它，但钱也将在所有开发者之间共享。你不能自己出售它。 - 主要参与开发人员处理池请求（以及项目的方向） 是否有任何许可条款可以做到这一点？它也适用于蒸汽吗？我一直在寻找 GPLv3 &amp;麻省理工学院，但我不确定我是否完全理解如果现有许可条款都没有这样做，我可以创建我的许可条款吗？它应该由 idk 验证吗？或者我可以简单地将其写在代码中吗？ 感谢您的阅读！！ 抱歉，如果这是 xrong sub 或 idk，这是我第一次在这里发帖   由   提交/u/magqq   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1oc9fnb/open_source_game_dev_licensing/</guid>
      <pubDate>Tue, 21 Oct 2025 10:34:58 GMT</pubDate>
    </item>
    <item>
      <title>我用一行代码制作了整个浏览器</title>
      <link>https://www.reddit.com/r/opensource/comments/1oc8wwc/i_made_an_entire_browser_in_one_line_of_code/</link>
      <description><![CDATA[      大家好，我刚刚创建了一个有趣的项目，一个只需一行代码即可运行的整个浏览器。该代码很快就会在 github 上提供。我还为这个项目制作了一个视频，我真的很想得到反馈。这是我的第一个视频（我还在学习中，如果质量不是很好，只是真实的，我很抱歉），所以如果你喜欢这个项目，在 YouTube 上的参与对我来说意义重大。谢谢。    由   提交/u/giannidev_  [链接] [评论] ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1oc8wwc/i_made_an_entire_browser_in_one_line_of_code/</guid>
      <pubDate>Tue, 21 Oct 2025 10:04:07 GMT</pubDate>
    </item>
    <item>
      <title>Plasma 6.5 已经出来了！期待酷炫的界面重新设计（圆角！自动平滑的明暗过渡！）、功能（智能 KRunner 搜索！固定剪贴板项目！）以及大量可用性和可访问性改进</title>
      <link>https://www.reddit.com/r/opensource/comments/1oc8uw3/plasma_65_is_out_look_forward_to_cool_interface/</link>
      <description><![CDATA[       由   提交/u/Bro666  [链接] [评论] ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1oc8uw3/plasma_65_is_out_look_forward_to_cool_interface/</guid>
      <pubDate>Tue, 21 Oct 2025 10:00:51 GMT</pubDate>
    </item>
    <item>
      <title>开源软件如何塑造当今的科技市场</title>
      <link>https://www.reddit.com/r/opensource/comments/1oc3od5/how_open_source_software_is_shaping_todays_tech/</link>
      <description><![CDATA[有趣的是，开源软件如何悄然成为几乎每个技术领域的支柱——从人工智能框架和操作系统到云基础设施和开发人员工具。 曾经是小众、社区驱动的运动现在正在为世界上一些最大的公司和创新提供动力。许多初创公司甚至围绕开源项目构建整个业务——提供托管服务、集成或企业级支持。 与此同时，我们看到了围绕可持续性、许可模式以及开源开发人员的工作是否得到公平认可和报酬的争论。 您如何看待开源自由与商业增长之间的平衡演变？您认为开源的主导地位会继续下去，还是封闭的生态系统会再次占据主导地位？   由   提交 /u/Due-Actuator6363   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1oc3od5/how_open_source_software_is_shaping_todays_tech/</guid>
      <pubDate>Tue, 21 Oct 2025 04:36:17 GMT</pubDate>
    </item>
    <item>
      <title>UICP — 将提示转变为具有持久状态的沙盒桌面应用程序 (Apache-2.0)</title>
      <link>https://www.reddit.com/r/opensource/comments/1oc21tx/uicp_turn_prompts_into_sandboxed_desktop_apps/</link>
      <description><![CDATA[嘿r/opensource！我已经构建 UICP 一段时间了，觉得是时候分享了。 这个想法 你描述你想要的东西，你就会在自己的窗口中得到一个可以运行的应用程序，而不是一条带有你必须复制粘贴的代码的聊天消息。应用程序在重新启动时保持状态，并在 WASM 沙箱中执行，并使用 Rust 验证器在运行前检查代码。  存储库：https://github.com/Braden-sui/UICP 许可证：Apache-2.0 堆栈：Tauri + React/TypeScript（桌面 shell）、Wasmtime（WASI 计算）、Rust（主机 + 验证器）、JS-in-WASI 小程序引擎；使用 pnpm + Vitest + Playwright 进行测试 操作系统：Windows 优先； Linux/macOS 正在进行中  今天的工作  3 阶段管道：架构师→规划者→演员。架构师生成一个 JSON TaskSpec（按范围声明键）。 Planner 映射到 UICP 操作（window.create、component.render、state.set、api.call、needs.code）。 Actor 发出一个确定性的 JSON 批次。 沙盒小程序：带有小型 WIT 接口的 JavaScript-in-WASI 组件（init、render、on-event）。 HTML 已被净化；沙箱没有环境网络/文件系统，并且有时间/内存上限。 状态持久性：窗口/工作区/全局范围；用于确定性重播的内容寻址黄金缓存。 验证器：针对明显危险的 Rust 拒绝列表（eval、新函数、网络原语、原型技巧、原始 innerHTML）。 CI：lint、 类型检查、单元、e2e 和计算冒烟测试。  仍然缺少/粗糙的内容  代理现在需要 Ollama，除非您连接自己的提供程序。 Claude Code 和 OpenAI Codex 的提供程序 CLI尚未连接；计划是将它们放在功能标志后面。 验证器需要更深入的 AST 级别分析和更多测试。 JS 小程序模块偏重；需要大小/延迟优化。 Linux/macOS 支持和打包不完整。 外部 API 集成大多已被打断； api.call 信封存在。  为什么它可能会对此子感兴趣 安全边界不是“LLM 编写代码然后运行”。有一个验证器 + WASM 沙箱，可审计的确定性重播，并且这些部分是可破解的：验证器规则，小程序 WIT，适配器操作，CI。 快速启动 git clone https://github.com/Braden-sui/UICP cd UICP pnpm install pnpm dev # 启动桌面应用程序（Windows for now) # 在应用程序中，尝试： # “制作一个显示‘测试成功’的测试窗口” # 然后重新启动应用程序并确认状态仍然存在。  先决条件：Node 20、pnpm 9、Tauri 的 Rust 工具链、在本地为代理运行的 Ollama（或插入您自己的提供程序）。剧作家，如果你要运行 e2e 测试。 我真正可以使用帮助的地方  安全性：基于 AST 的验证器检查；列举我错过的转义模式。 WASM：模块大小优化、Wasmtime 跨平台怪癖、更好的预检检查。 Linux/macOS：打包、CI 矩阵、可移植性修复。 Docs/DX：贡献、行为准则、good-first-issue 标签，快速入门润色。 测试：执行事件 → 状态 → 渲染 → 重播的 e2e 场景。  我正在积极维护并保持更改可审核   由   提交/u/randomlovebird  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1oc21tx/uicp_turn_prompts_into_sandboxed_desktop_apps/</guid>
      <pubDate>Tue, 21 Oct 2025 03:10:46 GMT</pubDate>
    </item>
    <item>
      <title>这些 OSS 项目在其网站上使用什么主题/框架？</title>
      <link>https://www.reddit.com/r/opensource/comments/1oc1mn4/what_themeframework_these_oss_projects_are_using/</link>
      <description><![CDATA[我在 usememos、Obsidian Notebook Navigator 等几个 OSS 项目的网站上看到了一个非常相似的主题模式。它们看起来都非常相似，所以我想知道他们在下面使用了一些常见的基本东西。  有人知道吗？    由   提交 /u/Open-Coder   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1oc1mn4/what_themeframework_these_oss_projects_are_using/</guid>
      <pubDate>Tue, 21 Oct 2025 02:50:05 GMT</pubDate>
    </item>
    <item>
      <title>[发布]WatchDoggo — 一款开源、轻量级的服务监视器 🐶</title>
      <link>https://www.reddit.com/r/opensource/comments/1oc1g5n/release_watchdoggo_an_opensource_lightweight/</link>
      <description><![CDATA[我构建 WatchDoggo 是为了密切关注我的团队所依赖的服务 — 简单、JSON 配置且易于扩展。 希望获得 DevOps 和 Python 人员的反馈！ https://github.com/zyra-engineering-ltda/watch-doggo/tree/v0.0.1   由   提交/u/mcloide  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1oc1g5n/release_watchdoggo_an_opensource_lightweight/</guid>
      <pubDate>Tue, 21 Oct 2025 02:41:22 GMT</pubDate>
    </item>
    </channel>
</rss>