<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：开源</title>
    <link>https://www.reddit.com/r/opensource/new</link>
    <description>与开源相关的所有内容的 Reddit 子版块（对于此上下文，我们在此不再定义开源的定义 http://en.wikipedia.org/wiki/Open_source）</description>
    <lastBuildDate>Wed, 22 Oct 2025 09:29:01 GMT</lastBuildDate>
    <item>
      <title>查找用例的特定项目</title>
      <link>https://www.reddit.com/r/opensource/comments/1od2u9r/finding_specific_project_for_use_case/</link>
      <description><![CDATA[ 由   提交/u/Azrian_  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1od2u9r/finding_specific_project_for_use_case/</guid>
      <pubDate>Wed, 22 Oct 2025 08:41:10 GMT</pubDate>
    </item>
    <item>
      <title>为什么 GitHub 显示的唯一克隆比唯一访问者更多？ 🤔</title>
      <link>https://www.reddit.com/r/opensource/comments/1od2fef/why_does_github_show_more_unique_clones_than/</link>
      <description><![CDATA[ 由   提交/u/aregtech  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1od2fef/why_does_github_show_more_unique_clones_than/</guid>
      <pubDate>Wed, 22 Oct 2025 08:13:57 GMT</pubDate>
    </item>
    <item>
      <title>ZeroPath 的 AI 代码扫描仪如何通过 170 份有效错误报告赢得了curl 项目</title>
      <link>https://www.reddit.com/r/opensource/comments/1od04nf/how_zeropaths_ai_code_scanner_won_over_the_curl/</link>
      <description><![CDATA[       由   提交 /u/MegaManSec2   [链接] [评论] ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1od04nf/how_zeropaths_ai_code_scanner_won_over_the_curl/</guid>
      <pubDate>Wed, 22 Oct 2025 05:47:59 GMT</pubDate>
    </item>
    <item>
      <title>构建了一个 npm 包，让您可以与后端对话</title>
      <link>https://www.reddit.com/r/opensource/comments/1od0090/built_an_npm_package_that_lets_you_talk_to_your/</link>
      <description><![CDATA[我构建了一个名为 mcphy 的包，它可以让你与后端进行对话。 它读取你的 API 文档或 Postman 导出，启动一个 模型上下文协议 (MCP) 服务器，并提供聊天式界面，您可以在其中询问有关后端的问题，而无需手动调用端点。 示例： “显示本周创建的所有用户”→ mcphy 会自动将该查询映射到正确的 API 端点，然后在 UI。 将其视为 Postman 与自然语言的结合，专为希望以更快、更直观的方式与 API 交互的开发人员和团队而构建。 这也为无法使用 Postman 或阅读 Swagger 文件的 PM、PO 或设计师等非技术团队成员以友好的对话方式与后端数据交互打开了大门。  现在还处于早期阶段，我正在寻找开发人员和贡献者，他们愿意帮助扩展它，改进解析、UI 或添加新功能。 尝试一下： npm install -g mcphy mcphy init mcphyserve  很想知道你的想法:)   由   提交 /u/ProffesorCucklord   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1od0090/built_an_npm_package_that_lets_you_talk_to_your/</guid>
      <pubDate>Wed, 22 Oct 2025 05:40:21 GMT</pubDate>
    </item>
    <item>
      <title>用Python制作一个播放多轨音频的视频媒体播放器</title>
      <link>https://www.reddit.com/r/opensource/comments/1ocx05b/made_a_video_media_player_that_plays_multitrack/</link>
      <description><![CDATA[Crusty Media Player 我制作了一个媒体播放器，能够获取多轨视频文件（例如：如果您使用系统音频和麦克风音频等单独的音轨剪辑录音），并让您能够在两个轨道同步的情况下播放它们，而无需使用 Premiere Pro 等外部编辑软件！而且它是开源的！ 这个项目的用途。 它利用捆绑的 ffmpeg 来从多轨视频媒体中分离音轨，并PyQt6 构建应用程序并显示视频媒体。 GitHub &lt;---- 此处存储库 Crusty Media Player v0.2.2 &lt;----此处最新的可下载版本 我为什么要做这个？ 这真的很简单，哈哈。我喜欢剪辑我和朋友玩电子游戏等时有趣又酷的部分。有时我也喜欢编辑视频作为一种爱好！为了使视频编辑更简单，我将录制设置设置为单独录制两个音频轨道，即我的系统音频和麦克风音频。问题在于，如果我想拉出一个剪辑给朋友看或其他东西，用我使用过的任何其他媒体播放器我只能选择一个曲目或另一个！我必须在游戏运行时打开 Premiere pro（使我的机器使用大量资源！）并将剪辑拖到 Premiere 中。这解决了这个问题，只需使用低资源应用程序打开文件并观看包含所有音频产品的剪辑！ 目标受众？ 如果您确实遇到了我所遇到的小众问题，那么 Crusty Media Player 可能非常适合您！我只是将 .exe 固定到我的任务栏上，这样每当我有炫耀的冲动，甚至只是查看剪辑时，我都可以运行它！ 快速入门  从 可下载版本 将 zip 文件夹内容提取到所需位置 运行 Crusty_Media_Player.exe 如果提示“Windows 保护您的电脑”，请执行以下操作：弹出窗口，只需点击“更多信息”即可然后“仍然运行” 打开最多包含两个音频轨道（即系统和麦克风音频）的视频文件 同步观看媒体！ （无需使用编辑软件！）  我非常感谢任何建设性的批评和建议，我可以将其添加到将来的版本中以便于使用！ 比较 像 VLC 这样的媒体播放器也可以从您的计算机播放视频文件。但使用这些工具时，您始终无法同时播放多轨视频的两个音轨！ Crusty Media Player 解决了这个问题，使您能够同时查看两个轨道的多轨音频媒体，而无需使用任何资源密集型编辑软件（如 Premiere Pro 或 Filmora）。 TLDR Crusty Media Player 是一款媒体播放器，能够获取多轨视频文件（例如：如果您使用系统音频等单独的音轨剪辑录音） 和麦克风音频），让您能够在两个轨道同步的情况下播放它们，而无需使用 Premiere Pro 等外部编辑软件！   由   提交 /u/Crusty_Monk   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1ocx05b/made_a_video_media_player_that_plays_multitrack/</guid>
      <pubDate>Wed, 22 Oct 2025 02:58:51 GMT</pubDate>
    </item>
    <item>
      <title>Valkey 9.0正式上线</title>
      <link>https://www.reddit.com/r/opensource/comments/1ocwizr/valkey_90_is_generally_available/</link>
      <description><![CDATA[🔥 刚刚发布：u/Valkey 9.0 - 将开源性能推向新高度 在集群环境中以 1B+ RPS 为基准，吞吐量提高 40%，Valkey 9.0 推出 改变游戏规则的功能： - 具有自动内存回收功能的哈希字段 TTL 管理 - 通过原子槽迁移实现零停机重新分片 - 集群模式下的多数据库支持，用于工作负载隔离 开源 Valkey 社区再次做到了这一点。无论您是构建实时分析、缓存层还是分布式系统，Valkey 9.0 都能提供可扩展性和不妥协的性能。 新闻稿：https://www.linuxfoundation.org/press/valkey-9.0-delivers-performance-and-resiliency-for-real-time-workloads 立即尝试：valkey.io/download #Valkey #Database #InMemory #OpenSource #Performance #DistributedSystems #RealTime   由   提交/u/rlunarojas   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1ocwizr/valkey_90_is_generally_available/</guid>
      <pubDate>Wed, 22 Oct 2025 02:35:28 GMT</pubDate>
    </item>
    <item>
      <title>替代应用程序</title>
      <link>https://www.reddit.com/r/opensource/comments/1ocw38r/alternative_app/</link>
      <description><![CDATA[有没有像 Kotatsu app（漫画）这样的好应用   由   提交/u/AnimeOtaku426   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1ocw38r/alternative_app/</guid>
      <pubDate>Wed, 22 Oct 2025 02:13:54 GMT</pubDate>
    </item>
    <item>
      <title>Outline 不断推迟对 Apache 2.0 的许可证更改；现在推迟到2029年。</title>
      <link>https://www.reddit.com/r/opensource/comments/1ocvhs9/outline_keeps_delaying_its_license_change_to/</link>
      <description><![CDATA[这是我的粗略详细信息： github 项目。  我一直在关注 Outline，这是一款流行的 wiki 软件，声称在“更改日期”后它将在 Apache 2.0 下开源。 最初，在 2020 年，其许可证从宽松的 BSD 式许可证更改为商业源码许可证 (BSL)，更改日期为 2023 年 3 月 1 日。 但该日期一直默默无闻（没有发行说明或解释） 延长了几次，现在是 2029 年 9 月 18 日。 时间表 2017 年 - BSD 风格许可证（开源）。 2020 年 - 切换到商业源代码许可证，添加“更改日期”→ 2023-03-01。 2023-2029 - 日期不断延长（2024 年 → 2025 → 2027 → 2029）。 当前 — 更改日期为 2029-09-18，又是六年 发布中没有任何公告解释这些延迟。该存储库是公开的，但部分代码库似乎被故意省略，例如，托管（云）版本中存在多工作空间支持，但公共代码中不存在，这超出了通常的“开放核心”方法，并且实际上甚至无法完全提供源代码。  我担心的是，该公司可能会利用开源社区和 GitHub 的知名度来构建闭源产品，而不尊重开源精神。 实际上我真的很喜欢这个项目，只是注意到日期更改，因为我看到要升级我的大纲，并记得更改日期是 2026 年，很高兴只等了一年该项目就开源了。  问题 这种反复推迟在开源世界中是否常见或被认为是道德的？   由   提交/u/Novapixel1010   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1ocvhs9/outline_keeps_delaying_its_license_change_to/</guid>
      <pubDate>Wed, 22 Oct 2025 01:45:17 GMT</pubDate>
    </item>
    <item>
      <title>如何从开源项目中赚钱？</title>
      <link>https://www.reddit.com/r/opensource/comments/1ocmpr2/how_to_make_money_from_your_opensource_projects/</link>
      <description><![CDATA[我是一名 17 岁的开发者，构建了多个流行的开源项目（包括流行的 Android 应用和系统工具），但我没有从其中任何一个项目中获得一分钱。 最近，我感觉工作热情明显丧失。尽管我在 GitHub 上收到了很多问题，但我不再有动力去修复它们或从事这些项目，因为我的努力没有得到任何经济回报。这种情况让我质疑我工作的可持续性。 我想继续创建免费的开源项目，但我需要采取一种策略来防止这种倦怠。 我对社区的实际问题是：对于拥有流行免费项目的独立开发者，您建议最现实的第一步是什么，以开始产生每月收入？当财务回报为零时，开发人员如何保持对项目的动力和热情？   由   提交/u/Motor_Armadillo_7317   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1ocmpr2/how_to_make_money_from_your_opensource_projects/</guid>
      <pubDate>Tue, 21 Oct 2025 19:38:01 GMT</pubDate>
    </item>
    <item>
      <title>荔枝切片机//树脂印刷切片机</title>
      <link>https://www.reddit.com/r/opensource/comments/1oclsns/lychee_slicerresin_printing_slicer/</link>
      <description><![CDATA[https://youtu.be/iEx5TbTswUE?si=BeggO-WWgR7eHG5q 此视频说明了这一点 全部。树脂 3D 打印社区没有针对该爱好的开源切片和支持创建工具。付费专区背后的单一功能。迄今为止最好的切片机只是提供了没人想要的功能。付费模型、人工智能的库。加载旧的保存的打印版本无法加载。它很慢并且性能不佳。如果某个或一个好心人愿意将树脂打印推向开源，那将是一个梦想。    由   提交/u/Regular_Classroom_40  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1oclsns/lychee_slicerresin_printing_slicer/</guid>
      <pubDate>Tue, 21 Oct 2025 19:03:43 GMT</pubDate>
    </item>
    <item>
      <title>开源加气混凝土搅拌机。这东西可以组成房子的很多部分。</title>
      <link>https://www.reddit.com/r/opensource/comments/1oclgsh/open_source_aircrete_mixer_this_thing_can_make/</link>
      <description><![CDATA[希望这是有道理的。如果有适当的支持，这可能会缓解住房危机。问题：不存在好的、便宜的加气混凝土搅拌设备。这很糟糕，因为这些东西的价值主张非常好。我的机器的 BOM 成本不到 5,000 美元。类似的同等价格超过 100,000 美元。如果我年轻的话，我可能会尝试小规模生产它们。该设计已经过顶级设备生产商和非蒸压加气混凝土 (NAAC) 生产商的审查。刚刚申请了OSHWA认证。  https://www.designingbuildings.co.uk/wiki/Aircrete https://github.com/OpenSourceAircrete/UNIVERSAL-AIRCRETE-MIXER   由   提交 /u/Dr_Oz_But_Real   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1oclgsh/open_source_aircrete_mixer_this_thing_can_make/</guid>
      <pubDate>Tue, 21 Oct 2025 18:51:54 GMT</pubDate>
    </item>
    <item>
      <title>DedSec 项目正在制作中。</title>
      <link>https://www.reddit.com/r/opensource/comments/1ocku4x/dedsec_project_in_making/</link>
      <description><![CDATA[作为《看门狗》游戏的忠实粉丝，我一直致力于一个项目，以实用的教育方式将其中一些想法变为现实。结果就是 DedSec 项目，这是一款一体化数字自卫工具包，旨在通过 Termux 在 Android 上运行！网站：www.ded-sec.space 以下是工具的说明，如果您想了解更多信息，我愿意接受建议和反馈！ （如果您喜欢，分享网站，并在 GitHub 上加星，完全免费！） 1) Fox Chat：一款安全的端到端加密聊天应用程序，受一次性密钥保护。功能包括短信、语音注释、文件共享（高达 10 GB）、实时摄像头捕捉和点对点视频通话。 2) DedSec 的数据库：受密码保护的自托管文件存储服务器。它允许您通过安全的 Web 界面上传、下载、搜索和管理文件，并自动将它们组织为文档、图像和视频等类别。 3) OSINTDS：开源情报（OSINT）收集和网络侦察的综合工具。它执行 WHOIS 和 DNS 记录、开放端口、子域和目录扫描，并检查 SQLi 和 XSS 等常见漏洞。它还包括一个交互式 HTML 检查器，用于下载网站的完整副本以进行离线分析。 4) 网络钓鱼演示：该模块演示恶意网页如何诱骗用户放弃对其设备的摄像头、麦克风和位置的访问权限，或输入个人详细信息和卡信息。这些脚本用于在您自己的设备上进行测试，以了解在单击链接之前验证链接的重要性。 5) URL Masker：一种教育工具，用于演示如何伪装链接，通过展示看似无辜的链接如何重定向到不同的目的地来帮助您学习识别潜在的恶意 URL。 6) Android 应用程序启动器：用于管理 Android 设备上已安装应用程序的实用程序。您可以启动、查看详细信息、卸载或提取任何应用程序的 APK 文件。它还包括应用程序权限检查器功能，可扫描 APK 以识别危险权限并检测嵌入式广告跟踪器，生成安全报告供您审查。 7) 设置：管理 DedSec 项目的中央控制面板。使用它可以查看系统信息、更新所有项目脚本和所需的包、更改 Termux 提示样式以及在列表或网格菜单布局之间切换。 8) 加载屏幕：安装启动 Termux 时出现的自定义 ASCII 艺术加载屏幕。您可以使用默认的艺术作品、提供自己的艺术作品并设置显示持续时间。 9) 数字足迹查找器：一种 OSINT（开源情报）工具，可帮助您发现多个在线平台上存在哪些有关用户名的公共信息。它扫描社交媒体网站、编码平台和其他服务，以查找与用户名相关的可公开访问的个人资料。该工具包括避免重复请求的缓存机制、减少检测的隐身模式，以及以文本和 JSON 格式保存结果。 10) 互联网工具：全面的网络分析和安全工具包，提供各种网络实用程序，包括 Wi-Fi 扫描、端口扫描、网络发现、速度测试和安全审核。功能包括被动 Wi-Fi 网络分析、具有服务检测的增强端口扫描、HTTP 标头安全分析、DNS 记录查找以及各种网络诊断工具。 11) 智能笔记：一款安全的笔记应用程序，具有加密存储、日历集成和提醒系统等高级功能。它提供了一个基于curses的TUI界面，可以轻松导航，支持富文本编辑，并包括一个复杂的搜索系统。 12) SSH Defender：一种蜜罐安全工具，模仿 SSH 服务器来检测和记录未经授权的访问尝试。它循环通过常见的 SSH 端口，模拟真实的 SSH 服务器行为来吸引攻击者，并全面记录所有连接尝试以及详细信息，包括 IP 地址、时间戳和捕获的数据。该工具包括一个用于监控攻击的实时 TUI 仪表板。   由   提交 /u/the_real_two   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1ocku4x/dedsec_project_in_making/</guid>
      <pubDate>Tue, 21 Oct 2025 18:28:31 GMT</pubDate>
    </item>
    <item>
      <title>到 2033 年，我们能否看到能够运行 Steam 游戏的开源 x86 兼容 CPU？</title>
      <link>https://www.reddit.com/r/opensource/comments/1ocijuk/could_we_see_an_opensource_x86compatible_cpu/</link>
      <description><![CDATA[我一直在考虑开源 x86 兼容 CPU 运行 Steam 的 x86 库的可能性，这意味着为 x86 处理器设计的大量 PC 游戏。似乎此类事情的主要障碍是专利。 专利情况：对此进行了一些非常的研究后，似乎许多核心 x86 和 x86-64 专利已经过期，为创建兼容处理器打开了大门。另外，据我了解，专利在申请后 20 年后到期。  SSE4.2（2008 年推出）：将于 2028 年到期。 AVX（2011 年推出）：将于 2031 年到期。 AVX2（2013 年推出）：将于 2033 年到期。  我有一种感觉，这其中还有更多的内容 我还没有考虑过！ 那么，考虑到这一点，你认为我们能在 2033 年左右看到这样的 CPU 发布吗？   由   提交/u/_MyGreatUsername_   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1ocijuk/could_we_see_an_opensource_x86compatible_cpu/</guid>
      <pubDate>Tue, 21 Oct 2025 17:03:55 GMT</pubDate>
    </item>
    <item>
      <title>BusKill 获得 FUTO 的 1,031 美元小额赠款</title>
      <link>https://www.reddit.com/r/opensource/comments/1ocfu0t/buskill_wins_1031_microgrant_from_futo/</link>
      <description><![CDATA[       由   提交/u/maltfield  [链接] [评论] ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1ocfu0t/buskill_wins_1031_microgrant_from_futo/</guid>
      <pubDate>Tue, 21 Oct 2025 15:21:22 GMT</pubDate>
    </item>
    <item>
      <title>厌倦了记住 PyInstaller 标志？我构建了 Py2Exe，一个现代的 FOSS GUI，使打包 Python 应用程序变得简单</title>
      <link>https://www.reddit.com/r/opensource/comments/1ocez8o/tired_of_memorizing_pyinstaller_flags_i_built/</link>
      <description><![CDATA[嘿， 像你们中的许多人一样，我经常使用 PyInstaller 来打包我的 Python 项目。这是一个非常强大的工具，但我总是发现自己在深入研究文档来记住添加图标、捆绑数据文件或管理隐藏导入的特定命令行参数。 为了解决自己的问题，我决定为其构建一个现代、直观且功能丰富的 GUI 前端。我很高兴今天与大家分享结果：Py2Exe。 它是用 PySide6 构建的，在 MIT 许可证下完全开源，可供您尝试。 目标是在一个易于导航的界面中展示 PyInstaller 的所有功能，而不牺牲功能。 主要功能：  ✨ 直观的选项卡式 UI： 所有选项都清晰地分为“基本”、“高级”和“包管理”选项卡。不再需要寻找正确的旗帜。 🌗 Light &amp;深色主题：自动与您的系统主题同步，或者您可以手动切换。标题栏也以 Windows 为主题！ 📄 实时构建日志： 通过并排日志面板准确查看 PyInstaller 正在执行的操作，并提供错误、警告和成功消息的语法突出显示。 ⚙️ 综合选项： 访问您需要的一切： 单文件与单目录 捆绑 窗口应用程序与控制台应用程序 自定义图标支持（.ico） 轻松管理数据文件和隐藏导入 控制构建/分发路径、UPX 压缩等。  ✅ 稳定且易于使用。健壮： UI 具有固定布局，可防止奇怪的调整大小问题，并提供一致的体验。  在 GitHub 上查看： https://github.com/dovvnloading/Py2Exe 该项目是使用 Python 3.8+ 和 PySide6 构建的。有关如何启动和运行它的说明都在自述文件中。 这是一个构建起来很有趣的项目，我希望它对社区中的一些人有用。我很想听听您的任何反馈！欢迎错误报告、功能建议和拉取请求。 感谢您查看！ TL;DR: 我为 PyInstaller 构建了一个免费的开源 GUI，无需命令行即可将 Python 脚本转换为可执行文件。它有一个干净的用户界面、浅色/深色主题、实时日志，并公开了大量的 PyInstaller 选项。链接到上面的存储库。   由   提交 /u/Ok-Function-7101   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1ocez8o/tired_of_memorizing_pyinstaller_flags_i_built/</guid>
      <pubDate>Tue, 21 Oct 2025 14:48:28 GMT</pubDate>
    </item>
    </channel>
</rss>